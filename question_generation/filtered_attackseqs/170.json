{
    "triplets": [
        {
            "Subject": "MuddyWater",
            "SubjectType": "threat-actor",
            "Relation": "utilize",
            "Object": "POWERSTATS",
            "ObjectType": "Malware",
            "tactic": "Initial Access",
            "technique": [
                "Others"
            ],
            "id": 1
        },
        {
            "Subject": "MuddyWater",
            "SubjectType": "threat-actor",
            "Relation": "host",
            "Object": "custom backdoor",
            "ObjectType": "Malware",
            "tactic": "Initial Access",
            "technique": [
                "Others"
            ],
            "id": 2
        },
        {
            "Subject": "GitHub profiles",
            "SubjectType": "infrastructure",
            "Relation": "contain",
            "Object": "payloads like ArabicBrowserFont.exe and FontArabic.exe",
            "ObjectType": "file",
            "tactic": "Initial Access",
            "technique": [
                "Others"
            ],
            "id": 3
        },
        {
            "Subject": "ReactDeveloper2017/react",
            "SubjectType": "directory",
            "Relation": "host",
            "Object": "test.js",
            "ObjectType": "file",
            "tactic": "Initial Access",
            "technique": [
                "Others"
            ],
            "id": 4
        },
        {
            "Subject": "MuddyWater",
            "SubjectType": "threat-actor",
            "Relation": "utilize",
            "Object": "command and control (C2) domains",
            "ObjectType": "domain-name",
            "tactic": "Command and Control",
            "technique": [
                "T1071-Application Layer Protocol"
            ],
            "id": 5
        },
        {
            "Subject": "command and control (C2) domains",
            "SubjectType": "domain-name",
            "Relation": "communicate-with",
            "Object": "compromised systems",
            "ObjectType": "infrastructure",
            "tactic": "Command and Control",
            "technique": [
                "T1071-Application Layer Protocol"
            ],
            "id": 6
        },
        {
            "Subject": "MuddyWater attackers",
            "SubjectType": "threat-actor",
            "Relation": "use",
            "Object": "open-source tools",
            "ObjectType": "tool",
            "tactic": "Defense Evasion",
            "technique": [
                "Others"
            ],
            "id": 7
        },
        {
            "Subject": "MuddyWater attackers",
            "SubjectType": "threat-actor",
            "Relation": "use",
            "Object": "GitHub",
            "ObjectType": "infrastrcucture",
            "tactic": "Defense Evasion",
            "technique": [
                "Others"
            ],
            "id": 8
        },
        {
            "Subject": "MuddyWater attackers",
            "SubjectType": "threat-actor",
            "Relation": "host",
            "Object": "POWERSTATS",
            "ObjectType": "Malware",
            "tactic": "Defense Evasion",
            "technique": [
                "Others"
            ],
            "id": 9
        },
        {
            "Subject": "MuddyWater attackers",
            "SubjectType": "threat-actor",
            "Relation": "compile",
            "Object": "POWERSTATS",
            "ObjectType": "Malware",
            "tactic": "Defense Evasion",
            "technique": [
                "Others"
            ],
            "id": 10
        }
    ],
    "file_name": "muddying-the-water-targeted-attacks",
    "tactic_label": true,
    "rewrite": {
        "Initial Access": "The MuddyWater attacks, primarily targeting Middle Eastern nations, utilized a PowerShell-based first stage backdoor named POWERSTATS. The malicious documents were tailored to target regions, often using local government logos to prompt users to enable macros. The attackers also used GitHub to host their custom backdoor, with repositories such as F0R3X/BrowserFontArabic containing payloads like ArabicBrowserFont.exe and FontArabic.exe. Another repository, ReactDeveloper2017/react, hosted a payload named test.js. These GitHub profiles were populated with forked repositories to appear legitimate.",
        "Defense Evasion": "The MuddyWater attackers used open-source tools such as Meterpreter, Mimikatz, Lazagne, and Invoke-Obfuscation. They also used GitHub for hosting their backdoor, POWERSTATS, and compiled it as an executable using PS2EXE, which was a minor anomaly as raw scripts were used in all other cases.",
        "Command and Control": "The MuddyWater campaign utilized command and control (C2) domains to communicate with compromised systems. These domains included a range of IP addresses and compromised legitimate sites such as arbiogaz.com, azmwn.suliparwarda.com, and bangortalk.org.uk, among others. Proxy URLs found from POWERSTATS samples from October 2017 onwards were also listed, indicating the use of web services for C2 communication.",
        "Others": "The MuddyWater campaign was active throughout 2017, targeting entities in countries such as Saudi Arabia, Iraq, Israel, United Arab Emirates, Georgia, India, Pakistan, Turkey, and the USA. The attacks were initially linked to the FIN7 threat actor group but later research suggested they were espionage-related. The attackers used compromised accounts at third-party organizations to send malware and potentially reveal their activity. The origin and specific objectives of the attackers remain unclear, but the activity is distinct from FIN7, which is financially motivated. Palo Alto Networks' WildFire and Traps detect the malware, and Threat Prevention blocks the C2 domains used by the attackers. AutoFocus customers can monitor ongoing activity using tags such as MuddyWater, PowerStats, LazaGne, DNSMessenger, and FIN7."
    },
    "technique_label": true
}