{
    "triplets": [
        {
            "Subject": "iDefense analysts",
            "SubjectType": "author",
            "Relation": "reported",
            "Object": "spear-phishing campaigns",
            "ObjectType": "campaign",
            "tactic": "Initial Access",
            "technique": [
                "T1566-Phishing"
            ],
            "id": 1
        },
        {
            "Subject": "SOCKSBOT",
            "SubjectType": "Malware",
            "Relation": "involve in",
            "Object": "spear-phishing campaigns",
            "ObjectType": "campaign",
            "tactic": "Initial Access",
            "technique": [
                "T1566-Phishing"
            ],
            "id": 2
        },
        {
            "Subject": "SOCKSBOT",
            "SubjectType": "Malware",
            "Relation": "spoofing",
            "Object": "Halyk Bank",
            "ObjectType": "identity",
            "tactic": "Initial Access",
            "technique": [
                "T1566-Phishing"
            ],
            "id": 3
        },
        {
            "Subject": "SOCKSBOT",
            "SubjectType": "Malware",
            "Relation": "spoofing",
            "Object": "PrivatBank",
            "ObjectType": "identity",
            "tactic": "Initial Access",
            "technique": [
                "T1566-Phishing"
            ],
            "id": 4
        },
        {
            "Subject": "JavaScript dropper",
            "SubjectType": "Malware",
            "Relation": "deliver",
            "Object": "dog.zip",
            "ObjectType": "file",
            "tactic": "Execution",
            "technique": [
                "T1059-Command and Scripting Interpreter"
            ],
            "id": 5
        },
        {
            "Subject": "setup.ps1",
            "SubjectType": "file",
            "Relation": "establish",
            "Object": "persistence",
            "ObjectType": "Tactic",
            "tactic": "Execution",
            "technique": [
                "T1059-Command and Scripting Interpreter"
            ],
            "id": 6
        },
        {
            "Subject": "checkupdate.ps1",
            "SubjectType": "file",
            "Relation": "contain",
            "Object": "PowerShell reflective loader script",
            "ObjectType": "file",
            "tactic": "Execution",
            "technique": [
                "T1059-Command and Scripting Interpreter"
            ],
            "id": 7
        },
        {
            "Subject": "PowerShell script setup.ps1",
            "SubjectType": "tool",
            "Relation": "create",
            "Object": "Windows service",
            "ObjectType": "artifact",
            "tactic": "Persistence",
            "technique": [
                "Others"
            ],
            "id": 8
        },
        {
            "Subject": "dropper executable binary",
            "SubjectType": "tool",
            "Relation": "use",
            "Object": "SOCKSBOT",
            "ObjectType": "Malware",
            "tactic": "Persistence",
            "technique": [
                "Others"
            ],
            "id": 9
        },
        {
            "Subject": "SOCKSBOT implant",
            "SubjectType": "Malware",
            "Relation": "communicate-with",
            "Object": "C2 server",
            "ObjectType": "infrastructure",
            "tactic": "Defense Evasion",
            "technique": [
                "T1620-Reflective Code Loading"
            ],
            "id": 10
        },
        {
            "Subject": "SOCKSBOT implant",
            "SubjectType": "Malware",
            "Relation": "communicate-with",
            "Object": "C2 servers",
            "ObjectType": "infrastructure",
            "tactic": "Command and Control",
            "technique": [
                "T1071-Application Layer Protocol"
            ],
            "id": 11
        },
        {
            "Subject": "C2 servers",
            "SubjectType": "infrastructure",
            "Relation": "host",
            "Object": "5.8.88[.]64",
            "ObjectType": "ipv4-addr",
            "tactic": "Command and Control",
            "technique": [
                "Others"
            ],
            "id": 12
        },
        {
            "Subject": "C2 servers",
            "SubjectType": "infrastructure",
            "Relation": "host",
            "Object": "46.166.163[.]243",
            "ObjectType": "ipv4-addr",
            "tactic": "Command and Control",
            "technique": [
                "Others"
            ],
            "id": 13
        },
        {
            "Subject": "C2 servers",
            "SubjectType": "infrastructure",
            "Relation": "host",
            "Object": "5.135.73[.]113",
            "ObjectType": "ipv4-addr",
            "tactic": "Command and Control",
            "technique": [
                "Others"
            ],
            "id": 14
        }
    ],
    "file_name": "Accenture-Goldfin-Security-Alert-1",
    "tactic_label": true,
    "rewrite": {
        "Initial Access": "iDefense analysts reported two spear-phishing campaigns in October 2017 involving the malware family SOCKSBOT, spoofing Halyk Bank and PrivatBank. The phishing emails contained identical messages and hyperlinks, suggesting the use of a phishing kit. The campaign spoofed various banks in CIS countries, including Halyk Bank, PrivatBank, Idea Bank, and Tejara Bank, with the most recent observed on May 28, 2018.",
        "Execution": "The infection chain began with a JavaScript dropper delivered via a ZIP archive named dog.zip, containing a JavaScript file with heavily obfuscated code. Once deobfuscated, the code searched for antivirus processes and dropped a PowerShell script named setup.ps1, which established persistence and used a modified version of the Invoke-EventVwrBypass function from the Empire Post-exploitation framework to bypass UAC. A second-stage PowerShell script named checkupdate.ps1 was also used, containing a PowerShell reflective loader script with a DLL binary embedded as Base64-encoded data.",
        "Persistence": "The PowerShell script setup.ps1 created a cmdlet to establish persistence by creating a Windows service named 'Check for updates' set to 'delay-auto' start and execute checkupdate.ps1. Additionally, a dropper executable binary was used to reflectively load SOCKSBOT into a chosen process, ensuring persistence by creating copies of itself in system directories and spoofing legitimate services with similar names.",
        "Defense Evasion": "The SOCKSBOT implant, delivered as a Base64-encoded string, was reflectively loaded in a newly started svchost.exe process, existing only in memory and never touching the disk. It used the ObtainUserAgentString API to determine the default user-agent of the machine and communicated with the C2 server using a pseudo-randomly generated URI.",
        "Command and Control": "The SOCKSBOT implant communicated with C2 servers using sockets and specific HTTP status codes to perform actions such as creating new sockets, enumerating processes, taking screenshots, and performing file operations. Three different C2 servers were observed: 5.8.88[.]64, 46.166.163[.]243, and 5.135.73[.]113.",
        "Others": "The Goldfin campaign, using SOCKSBOT, targeted financial institutions in CIS countries for financial gain. The campaign is not believed to be associated with CANDLEFISH but has infrastructure overlap and shared use of a PowerShell obfuscation technique with FIN7. Domains used in the campaign had identical WHOIS information and network hosting overlap with domains associated with FIN7. The campaign also used a variant of a PowerShell obfuscation technique similar to PowerSploit, previously observed in malware associated with FIN7. Mitigation recommendations include blocking access URIs and IP addresses associated with the campaign, and verifying the existence of artifacts such as randomly named files in system directories, a service named 'Check for updates', and a svchost.exe process without wininit.exe as the parent process."
    },
    "technique_label": true
}