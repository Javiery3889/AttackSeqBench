{
    "triplets": [
        {
            "Subject": "RyanJ",
            "SubjectType": "author",
            "Relation": "authored-by",
            "Object": "blog post",
            "ObjectType": "artifact",
            "tactic": "Defense Evasion",
            "technique": [
                "T1564-Hide Artifacts"
            ]
        },
        {
            "Subject": "blog post",
            "SubjectType": "artifact",
            "Relation": "discuss",
            "Object": "file stacking",
            "ObjectType": "Technique",
            "tactic": "Defense Evasion",
            "technique": [
                "T1564-Hide Artifacts"
            ]
        },
        {
            "Subject": "file stacking",
            "SubjectType": "Technique",
            "Relation": "use",
            "Object": "timestamp analysis",
            "ObjectType": "Technique",
            "tactic": "Defense Evasion",
            "technique": [
                "T1564-Hide Artifacts"
            ]
        },
        {
            "Subject": "file stacking",
            "SubjectType": "Technique",
            "Relation": "identify",
            "Object": "System_web.aspx",
            "ObjectType": "file",
            "tactic": "Defense Evasion",
            "technique": [
                "T1564-Hide Artifacts"
            ]
        },
        {
            "Subject": "System_web.aspx",
            "SubjectType": "file",
            "Relation": "associate-with",
            "Object": "Deep Panda",
            "ObjectType": "threat-actor",
            "tactic": "Defense Evasion",
            "technique": [
                "T1564-Hide Artifacts"
            ]
        }
    ],
    "file_name": "Mo' Shells Mo' Problems - File List Stacking \u00bb",
    "tactic_label": true,
    "rewrite": {
        "Reconnaissance": "None",
        "Resource Development": "None",
        "Initial Access": "None",
        "Execution": "None",
        "Persistence": "None",
        "Privilege Escalation": "None",
        "Defense Evasion": "In a blog post dated March 7, 2014, authored by RyanJ from CrowdStrike, a method called 'file stacking' is discussed as a means to hunt for web shells in an environment. The post, titled 'Mo' Shells Mo' Problems - FileList Stacking,' explains that adversaries typically create web shells on a small number of servers, making it challenging to detect them among many servers. The goal of file stacking is to identify uncommon files, which could potentially be malware, by focusing on specific directories and file extensions such as ASP, ASPX, JSP, PHP, and CFM. The method involves sorting by file creation time to identify outliers that do not match the creation times of group files, which are usually part of normal deployments. The post provides an example of a predominantly Windows environment with about 200 servers, where file stacking helped to reduce the number of files to sift through from 179,231 to 1,671 by limiting the search criteria. Timestamp analysis and sorting by full file path are used to further narrow down suspicious files. The post details the discovery of a web shell named 'System_web.aspx' created at an atypical time, which was confirmed to be a web shell associated with the Chinese threat group Deep Panda.",
        "Credential Access": "None",
        "Discovery": "None",
        "Lateral Movement": "None",
        "Collection": "None",
        "Command and Control": "None",
        "Exfiltration": "None",
        "Impact": "None",
        "Others": "None"
    },
    "technique_label": true
}