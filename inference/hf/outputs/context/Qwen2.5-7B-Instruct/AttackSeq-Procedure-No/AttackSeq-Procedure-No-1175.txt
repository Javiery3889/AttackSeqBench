Let's analyze the CTI outline and the question step-by-step to determine the most plausible sequence of TTPs.

### Step 1: Analyze the CTI Outline
1. **Reconnaissance**: The Taidoor malware campaign starts with a spear-phishing email.
2. **Execution**: The malware silently installs itself on a vulnerable system.
3. **Defense Evasion**: The malware uses a 'downloader' to retrieve encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware.
4. **Command and Control**: The malware communicates with CnC servers using modified network traffic patterns.

### Step 2: Analyze the Question
The question asks if, after the spear-phishing attack, the Taidoor malware will execute beaconing communications using a consistent HTTP GET request pattern before exploiting a vulnerability in Microsoft Office to drop itself onto the target's system.

### Step 3: Compare and Evaluate
- **Reconnaissance**: The spear-phishing email is the initial step.
- **Execution**: The malware silently installs itself, but there is no mention of exploiting a vulnerability in Microsoft Office.
- **Defense Evasion**: The malware uses a 'downloader' to retrieve encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware.
- **Command and Control**: The malware communicates with CnC servers using a consistent HTTP GET request pattern.

### Step 4: Reasoning and Final Answer
- The CTI outline does not mention the malware exploiting a vulnerability in Microsoft Office to drop itself onto the target's system. Instead, it states that the malware silently installs itself after the spear-phishing email.
- The outline does mention that the malware uses a consistent HTTP GET request pattern for beaconing communications, which aligns with the Command and Control phase.

Given the information provided, the sequence described in the question does not match the attack sequence detailed in the CTI outline. The malware does not use a vulnerability in Microsoft Office to drop itself, but it does use a consistent HTTP GET request pattern for beaconing communications.

**Final Answer: No**