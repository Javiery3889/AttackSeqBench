**Step 1: Analyze the CTI Outline**

The CTI outline describes an attack sequence involving Operation WizardOpium, which leverages a zero-day exploit, CVE-2019-13720, in Google Chrome. The attack sequence is as follows:

1. Initial Access: A waterhole-style injection on a Korean-language news portal to deliver the exploit.
2. Initial Access: The exploit is delivered through a malicious JavaScript code that redirects victims to the exploit landing page.
3. Initial Access: The script checks the victim's system for compatibility, specifically targeting 64-bit Windows systems and Chrome versions 65 or newer.
4. Persistence: The malware installs tasks in the Windows Task Scheduler after the final payload is downloaded as an encrypted binary, decrypted, and dropped as updata.exe to disk.
5. Command and Control: The main module of the malware, msdisp64.exe, downloads the next stage from a hardcoded C2 server.

**Step 2: Analyze the Question**

The question asks whether attackers utilized heap spraying techniques to gain an arbitrary read/write primitive and execute embedded shellcode payload before inserting malicious JavaScript code into a Korean-language news portal.

**Step 3: Compare and Evaluate**

The CTI outline does not explicitly mention heap spraying techniques. However, it does describe the use of a zero-day exploit, CVE-2019-13720, in Google Chrome, which is a type of memory corruption vulnerability that can be exploited to gain arbitrary read/write primitives. The exploit is delivered through a malicious JavaScript code that redirects victims to the exploit landing page.

Given the context, it is likely that the attackers used the exploit to gain an arbitrary read/write primitive and execute embedded shellcode payload. Heap spraying is a technique often used to achieve this goal, but it is not explicitly mentioned in the CTI outline.

**Step 4: Provide a Step-by-Step Reasoning and Final Answer**

Based on the analysis, the most plausible sequence of TTPs is that the attackers used the exploit to gain an arbitrary read/write primitive and execute embedded shellcode payload. Therefore, the answer is:

Final Answer: A