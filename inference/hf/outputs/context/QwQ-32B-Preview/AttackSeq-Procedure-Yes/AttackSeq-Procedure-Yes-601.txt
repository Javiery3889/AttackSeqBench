To answer this question, I need to carefully analyze the provided CTI outline and see if there's any indication that attackers exfiltrate AWS credentials as part of their attack sequence after establishing contact with C2 servers.

First, let's break down the CTI outline step by step:

1. **Reconnaissance:**
   - Adversaries use worms and scanning tools like masscan to detect and infect vulnerable hosts.
   - They use public search engines like Shodan or Censys.
   - A script is provided that uses masscan and zgrab to scan netblocks and detect compromised Docker APIs.

2. **Resource Development:**
   - Attackers' infrastructure is analyzed through inbound and outbound traffic.
   - IPs used for disseminating and communicating with Kinsing malware are identified.
   - Domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf are used for CnC servers.
   - Compromised websites are used to store malicious files.
   - Open-source and offensive security tools are used to find and exploit vulnerabilities.

3. **Initial Access:**
   - Misconfigured Docker API ports exposed to the internet are exploited.
   - Attackers build files on the host from base64.
   - They create public registry accounts that mimic popular software to trick developers into pulling and running malicious container images.
   - A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.

4. **Execution:**
   - Command and script interpreters are abused to execute malicious commands, scripts, or binaries.
   - Cmd or entry point is used to execute commands, scripts, or binaries.
   - CURL or WGET are used to download scripts or binaries from a remote source.
   - Encoded binary is decoded, written to a file, and executed.
   - Local jobs are scheduled after mounting the host and using the cron utility.

5. **Persistence:**
   - LD_PRELOAD is used to hijack execution flow and gain persistence.
   - New user accounts with RSA keys are created to open backdoors for full control of the host.

6. **Privilege Escalation:**
   - HostPath mount is used to gain persistence on the underlying host.
   - Chroot is used to run processes outside the container and save files in different locations on the host.
   - External remote services like IRC channels are used by Tsunami malware to provide full access to an infected machine and become part of a botnet.

7. **Defense Evasion:**
   - Security software is removed to avoid detection.
   - Obfuscated files or information are used to avoid detection of malicious binaries.
   - Fileless malware attacks are executed by loading malware into memory and executing it without leaving a trace on the disk.

8. **Credential Access:**
   - Open-source tools like the Python script punk.py are used to collect credentials, including usernames, SSH keys, and known hosts from a Unix system.
   - New users are created and hidden in the victim's environment to mask the presence of user accounts they created.

9. **Command and Control:**
   - Proxy tools like Ngrok are used for lateral movement and data exfiltration.
   - Legitimate external websites are used as C2 servers.
   - Data encoding is used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.

10. **Impact:**
    - Cryptocurrency mining is the main objective of most attacks, with over 90% of the images executing resource hijacking.
    - New objectives such as backdoors, malware deployments, and credential theft are emerging.
    - Worms are used to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.

Now, focusing on the question: "After attackers establish contact with C2 servers by downloading shell scripts and encoding malicious binary files, is it likely that they will automatically exfiltrate AWS credentials over the C2 server as part of their attack sequence?"

Let's look for any mention of AWS credentials or exfiltration of such credentials in the CTI outline.

In the **Credential Access** section, it is mentioned that adversaries use open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. However, there is no specific mention of AWS credentials being targeted or exfiltrated.

In the **Impact** section, it is noted that new objectives such as backdoors, malware deployments, and credential theft are emerging. This suggests that credential theft, including possibly AWS credentials, is a growing focus, but again, there's no explicit mention.

Given that the attackers are using various methods to collect credentials, it's plausible that they might target AWS credentials, especially in environments where AWS is used. However, based on the provided outline, there is no direct evidence or specific indication that AWS credentials are being exfiltrated as part of the standard attack sequence after establishing C2 contact.

Therefore, considering the information provided, the answer is:

**Final Answer: B: No**