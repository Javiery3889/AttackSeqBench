### Step-by-Step Analysis

1. **Analyze the CTI Report:**
   - **Execution:**
     - SUNSPOT malware was used to insert the SUNBURST backdoor into SolarWinds Orion IT management product builds.
     - It monitors processes involved in the compilation of the Orion product and replaces a source file to include the SUNBURST backdoor code.
   - **Persistence:**
     - Maintains persistence through a scheduled task set to execute when the host boots.
   - **Privilege Escalation:**
     - Grants itself debugging privileges by modifying its security token to add SeDebugPrivilege.
   - **Defense Evasion:**
     - Uses AES128-CBC encryption to protect targeted source code files and the backdoored source code file in the binary.
     - Uses RC4 encryption with a hard-coded key to protect log file entries.
     - Masquerades as a legitimate Windows binary and writes its logs in a fake VMWare log file.
     - Inserts the backdoor code within #pragma statements to disable and restore warnings.
   - **Discovery:**
     - Monitors running processes for instances of MsBuild.exe to detect the targeted Visual Studio solution build.

2. **Analyze the Question:**
   - The question asks whether it is likely that SUNSPOT will monitor running processes for instances of MsBuild.exe as part of the Discovery tactic after modifying the Orion source code to inject the SUNBURST backdoor.

3. **Compare and Evaluate:**
   - The CTI report explicitly states that SUNSPOT monitors running processes for instances of MsBuild.exe to detect the targeted Visual Studio solution build. This is part of the Discovery tactic.
   - The sequence of events in the report indicates that after modifying the Orion source code to inject the SUNBURST backdoor, SUNSPOT continues to monitor processes to ensure the backdoor is successfully integrated into the build process.

4. **Step-by-Step Reasoning:**
   - **Execution:** SUNSPOT modifies the Orion source code to inject the SUNBURST backdoor.
   - **Discovery:** SUNSPOT monitors running processes for instances of MsBuild.exe to detect the targeted Visual Studio solution build.
   - The monitoring of MsBuild.exe is a critical step to ensure that the backdoor is successfully included in the build process.
   - Therefore, it is highly likely that SUNSPOT will continue to monitor running processes for instances of MsBuild.exe as part of the Discovery tactic.

### Final Answer
Final Answer: A: Yes