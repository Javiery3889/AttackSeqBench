To answer this question, let's break down the information provided in the CTI report and analyze the question step by step.

1. **Analyzing the CTI Report:**
   - **Reconnaissance:** TG1021 used deserialization attacks on Windows IIS servers.
   - **Initial Access:** Exploited internet-facing Windows IIS servers.
   - **Execution:** Executed memory-resident malware.
   - **Persistence:** Used web shells and a custom malware framework (NodeIISWeb) for persistence, operating mostly in-memory.
   - **Privilege Escalation:** Employed techniques like custom Potato family tools and dynamic DLL loading.
   - **Defense Evasion:** Actively interfered with logging, evaded EDRs, and removed disk-resident tools for stealth.
   - **Credential Access:** Modified login webpages to record credentials.
   - **Discovery:** Used tools like SharpHound and PowerSploit for reconnaissance, loading them into memory without disk presence.
   - **Lateral Movement:** Accessed shared folders over SMB, dropped web shells for server compromise, and used exploits for lateral movement between IIS servers.

2. **Analyzing the Question:**
   - The question asks if, after accessing shared folders and dropping the NodeIISWeb web shell loader via SMB for lateral movement, TG1021 likely established command and control (C2) using a one-way communication method via GitLab and Digital Point.

3. **Comparing and Evaluating:**
   - The CTI report details various tactics, techniques, and procedures (TTPs) used by TG1021, including initial access, execution, persistence, privilege escalation, defense evasion, credential access, discovery, and lateral movement.
   - The question focuses on the method of command and control after lateral movement.
   - The report mentions that the malware "silently awaits incoming connections, rather than connecting back to a C2 channel and continuously generating traffic," which suggests a preference for stealthy, potentially one-way communication methods to avoid detection.
   - However, the report does not explicitly mention the use of GitLab and Digital Point for command and control.

4. **Step-by-Step Reasoning:**
   - TG1021's tactics emphasize stealth and evasion, suggesting they would prefer methods that minimize detectable communication.
   - The use of one-way communication methods could align with their strategy of avoiding detection by not continuously generating traffic to a C2 channel.
   - While the report does not directly mention GitLab and Digital Point, the emphasis on stealth and the use of innovative, less detectable methods for persistence and evasion suggest that unconventional C2 methods could be plausible.
   - However, without explicit mention of these platforms in the context of C2, we must consider if the provided information leans towards the use of such methods based on the threat actor's behavior and preferences.

5. **Final Evaluation:**
   - Given the emphasis on stealth, evasion, and the use of memory-resident tools, it's plausible that TG1021 would use unconventional methods for C2 that minimize detection.
   - The question's specificity about using GitLab and Digital Point for one-way communication introduces details not directly covered in the report, making it necessary to infer based on the threat actor's overall behavior.

**Final Answer: A**