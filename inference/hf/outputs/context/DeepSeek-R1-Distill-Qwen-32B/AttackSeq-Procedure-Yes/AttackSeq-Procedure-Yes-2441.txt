Okay, so I need to figure out whether the Elise malware communicates with the hardcoded C2 server using an application layer protocol after collecting system information. Let me go through the CTI report step by step.

First, the report mentions that the Elise malware is used by the threat group DRAGONFISH. The initial access vector is a malicious Word document that drops an executable exploiting CVE-2017-11882. The payload is moved to a specific folder and executed.

Looking at the Execution section, the malware starts Internet Explorer, injects NavShExt.dll, and calls the 'Setting' function. It creates a mutex to prevent multiple executions and stores data in thumbcache_1CD60.db. It also communicates with a hardcoded C2 server at 103.236.150[.]14, sending data and downloading files and commands.

In the Defense Evasion section, it uses anti-virtual machine features, obfuscates data with base64 encoding in cookies, and spoofs hosts to query non-existing domains. The logs are encrypted with AES.

The Discovery section states that the malware harvests system info like IP addresses, installed software, proxy info, process enumeration, and desktop files. After collecting this info, it's likely to send it to the C2 server.

The question is whether it uses an application layer protocol for C2 communication. Application layer protocols are typically HTTP, HTTPS, FTP, etc. The report mentions that data is exfiltrated using base64-encoded cookie values, which is a method often used in HTTP/HTTPS communications. Also, the C2 server is accessed via an IP address, which suggests network communication, likely over standard ports used by application layer protocols.

So, putting it together, the malware communicates with the C2 server, uses base64 encoding in cookies, which is common in web-based protocols. Therefore, it's likely using an application layer protocol like HTTP or HTTPS.
</think>

The Elise malware communicates with a hardcoded C2 server and uses base64-encoded cookies, indicating the use of an application layer protocol such as HTTP or HTTPS for command and control.

Final Answer: A