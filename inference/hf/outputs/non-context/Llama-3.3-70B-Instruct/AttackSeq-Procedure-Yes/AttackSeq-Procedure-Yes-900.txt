To answer this question, let's break down the information provided and analyze it step by step in the context of Cyber Threat Intelligence (CTI) and the MITRE ATT&CK framework.

1. **Analyzing the Question:**
   - The question mentions a sequence of actions involving a base64 encoded blob, which is decoded and executed based on the system architecture. This indicates an initial stage of an attack where the attacker is ensuring that the correct payload is delivered to the target system, regardless of its architecture (32-bit or 64-bit).
   - The mention of "KerrDown DLL" suggests a specific malware or tool being used, possibly named or codenamed "KerrDown," which is involved in executing a payload.
   - The question specifically asks if the KerrDown DLL would execute the payload in memory using process injection as a defense evasion tactic.

2. **Understanding the TTPs (Tactics, Techniques, and Procedures):**
   - **Decoding and executing a base64 encoded blob** is a common technique used by attackers to hide their payloads and ensure they can be executed on various systems without being easily detected.
   - **Process injection** is a technique used by attackers to evade defenses by injecting malicious code into legitimate processes running on a system. This allows the malicious code to hide among normal system activity and makes it harder for security software to detect.

3. **Evaluating the Answer Choices:**
   - **A: Yes** - This choice suggests that after the initial decoding and execution phase, the KerrDown DLL would indeed use process injection to execute the payload in memory. This aligns with common defense evasion tactics where attackers try to hide their malicious activities within legitimate system processes.
   - **B: No** - This choice implies that the KerrDown DLL would not use process injection, which seems less likely given the context of defense evasion tactics commonly used by attackers.

4. **Step-by-Step Reasoning:**
   - The use of a base64 encoded blob for payload delivery indicates an attempt to evade initial detection.
   - The execution of the payload based on system architecture shows an effort to ensure compatibility and success of the attack.
   - Process injection is a well-documented technique (TID1005 in the MITRE ATT&CK framework) used for defense evasion, allowing malicious code to blend in with legitimate system processes.
   - Given the context, it is reasonable to assume that the KerrDown DLL, as part of its defense evasion tactics, would utilize process injection to execute the payload in memory, making it harder to detect.

**Final Answer: A**