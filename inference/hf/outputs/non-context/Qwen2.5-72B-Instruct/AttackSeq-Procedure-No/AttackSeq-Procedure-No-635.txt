### Step-by-Step Reasoning:

1. **Analyze the Question:**
   - The question describes a sequence of events where malicious JavaScript code was inserted into a Korean-language news portal.
   - The JavaScript code redirects victims to an exploit landing page that exploits CVE-2019-13720 in Google Chrome.
   - The question asks if it is likely that attackers used heap spraying techniques to gain an arbitrary read/write primitive and execute embedded shellcode payload.

2. **Evaluate Each Answer Choice:**

   - **Answer Choice A: Yes**
     - Heap spraying is a technique often used in browser exploits to increase the likelihood of successful exploitation by filling the memory with a specific pattern of data.
     - CVE-2019-13720 is a use-after-free vulnerability in Google Chrome, which can be exploited to gain arbitrary read/write access.
     - Once the attacker gains arbitrary read/write access, they can execute embedded shellcode.
     - Heap spraying can be used to make the exploitation more reliable by ensuring that the memory layout is favorable for the exploit.

   - **Answer Choice B: No**
     - This choice suggests that heap spraying was not used.
     - However, given the nature of the vulnerability (use-after-free) and the need to reliably execute shellcode, heap spraying is a common and effective technique in such scenarios.

3. **Final Reasoning:**
   - Given the nature of the vulnerability (CVE-2019-13720) and the typical methods used to exploit such vulnerabilities, it is highly likely that heap spraying was used to gain an arbitrary read/write primitive and execute the embedded shellcode payload.
   - Heap spraying is a well-known technique in browser exploitation to increase the reliability of the exploit.

### Final Answer: A: Yes