### Step-by-Step Reasoning:

1. **Analyze the Question:**
   - The question describes an attack sequence where APT-TOCS initially gains access using `powershell.exe` to execute Shellcode scripts for remote control.
   - The question then asks whether it is likely that PowerShell scripts were used to run a credential harvesting tool in memory instead of the Shellcode script functionalities being executed in memory.

2. **Compare and Evaluate:**
   - **Initial Access with PowerShell and Shellcode:**
     - The initial access is achieved using `powershell.exe` to execute Shellcode scripts. Shellcode is a small piece of code used to exploit a vulnerability and typically provides a backdoor or remote access.
   - **Credential Harvesting:**
     - Credential harvesting is a common technique used by attackers to gather usernames, passwords, and other sensitive information. This can be done using various tools and scripts.
   - **In-Memory Execution:**
     - Both Shellcode and PowerShell scripts can be executed in memory to evade detection by traditional disk-based security solutions.
   - **Plausibility of Using PowerShell for Credential Harvesting:**
     - PowerShell is a powerful scripting language that can be used to perform a wide range of tasks, including credential harvesting. Tools like Mimikatz, which is a well-known credential harvesting tool, can be executed using PowerShell.
     - Given that the initial access was achieved using PowerShell, it is plausible that the same PowerShell environment could be used to run a credential harvesting tool in memory.

3. **Final Answer:**
   - Based on the analysis, it is likely that PowerShell scripts were utilized to run a credential harvesting tool in memory to evade defenses during the attack's core step. This aligns with the common practices of using PowerShell for both initial access and subsequent malicious activities.

**Final Answer: A: Yes**