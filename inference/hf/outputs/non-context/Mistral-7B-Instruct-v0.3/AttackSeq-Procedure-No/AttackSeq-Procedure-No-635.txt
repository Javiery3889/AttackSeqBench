 Final Answer: A: Yes

Reasoning:
1. Analyze the Question: The question describes a sequence of TTPs (Techniques, Tactics, and Procedures) that involve the insertion of malicious JavaScript code into a website, followed by a redirection to an exploit landing page targeting CVE-2019-13720 in Google Chrome. The question also mentions the possibility of using heap spraying techniques to gain an arbitrary read/write primitive and execute shellcode payload.

2. Compare and Evaluate:
   - Heap spraying is a technique used to manipulate the heap memory to create a predictable layout, which can be exploited to gain an arbitrary read/write primitive. This technique is often used as a precursor to executing shellcode payloads.
   - The sequence of TTPs described in the question (inserting malicious JavaScript code, redirection to an exploit landing page, and exploiting CVE-2019-13720) suggests that the attackers are attempting to gain unauthorized access to the victims' systems. Heap spraying can be a method used to achieve this goal by creating a vulnerability that can be exploited to execute arbitrary code.
   - Therefore, it is plausible that the attackers utilized heap spraying techniques before executing the exploit landing page and the subsequent exploit of CVE-2019-13720.

3. Provide a Step-by-Step Reasoning:
   - The attackers first insert malicious JavaScript code into a Korean-language news portal. This code could be designed to perform various actions, such as gathering information about the victim or preparing the environment for the next stage of the attack.
   - The malicious JavaScript code then redirects the victims to an exploit landing page. This page contains the exploit for CVE-2019-13720, a vulnerability in Google Chrome that allows for arbitrary code execution.
   - To make the exploit successful, the attackers need to have a way to write arbitrary data to memory. Heap spraying is a technique that can be used to create a predictable memory layout, which can then be exploited to gain an arbitrary read/write primitive.
   - Once the attackers have an arbitrary read/write primitive, they can write their shellcode payload into memory and execute it, thus gaining unauthorized access to the victim's system.

Therefore, it is likely that the attackers utilized heap spraying techniques to gain an arbitrary read/write primitive and execute their shellcode payload.