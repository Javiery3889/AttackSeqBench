Okay, so I'm trying to figure out whether the Sunburst backdoor would use domain fronting after being delivered via a supply-chain attack on SolarWinds. Let me break this down step by step.

First, I know that the SolarWinds attack was a major supply-chain attack that compromised many organizations. The attackers used compromised SolarWinds software updates to insert a backdoor, which they called Sunburst. This backdoor gives them access to the compromised systems.

Now, the question is about whether this backdoor would use domain fronting. Domain fronting is a technique where malicious actors disguise their traffic to look like it's coming from a legitimate, trusted domain. This can help avoid detection by security tools that monitor for known malicious domains.

So, considering the attack sequence: the initial compromise was through a supply-chain attack, which is the first step. Once they have access, they deploy the backdoor. Now, after having a backdoor, the next step might involve exfiltration or further attacks. To avoid detection, using domain fronting makes sense because it makes the traffic appear as if it's coming from a legitimate source, like a widely used service, making it harder for defenders to spot the malicious traffic.

I remember that in some other attacks, like APT29's use of compromised software, they also used domain fronting to hide their C2 communications. This technique helps in evading network firewalls and other monitoring tools that block known malicious domains.

So, putting it together, after compromising SolarWinds and having the Sunburst backdoor, it's plausible that the attackers would use domain fronting to communicate with their C2 server, making the traffic look legitimate. This would help in avoiding detection and maintaining persistence in the network.
</think>

The Sunburst backdoor, introduced via the SolarWinds supply-chain attack, is likely to use domain fronting to communicate with its C2 server. This technique allows the malicious traffic to appear as legitimate, aiding in evading detection and ensuring persistence.

Final Answer: A: Yes