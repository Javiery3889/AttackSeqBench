To answer this question, I need to analyze the sequence of events described and evaluate whether the Shellcode scripts were likely executed in memory without being written to the hard disk, especially considering the context of the attack and the tactics used.

First, let's break down the information provided:

1. **Initial Access:** APT-TOCS used "powershell.exe" to execute Shellcode scripts for remote control of targeted systems.

2. **Execution in Memory:** The question asks whether these Shellcode script functionalities were executed in memory during the core step of the attack without being written to the hard disk.

3. **Defense Evasion:** After this, attackers employed multi-beacon communication for defense evasion.

Given that APT groups, especially those involved in sophisticated attacks, often employ techniques to minimize their footprint and avoid detection, executing code in memory is a common tactic. This approach helps them evade traditional defenses that look for files on disk.

**Step-by-Step Analysis:**

1. **Initial Access via PowerShell:**
   - PowerShell is a powerful scripting language and shell that comes pre-installed on Windows systems. It's frequently used by attackers because it allows for system manipulation without needing to write files to disk.
   - Using PowerShell to execute Shellcode suggests that the attackers are leveraging its capabilities to run commands and scripts directly in memory.

2. **Shellcode Execution in Memory:**
   - Shellcode is a sequence of instructions that performs a specific task, often used by attackers to gain control over a system.
   - When Shellcode is executed via PowerShell, it can be run directly in memory without being written to the hard disk. This is achieved through techniques like PowerShell's ability to execute Base64-encoded scripts or by using memory-only execution methods.
   - This in-memory execution aligns with the goal of avoiding disk-based artifacts, making it harder for security solutions to detect the malicious activity.

3. **Multi-Beacon Communication for Defense Evasion:**
   - After gaining initial access and executing the Shellcode, the attackers used multi-beacon communication. Beacons are small pieces of code that periodically communicate with a command and control (C2) server to receive further instructions or upload stolen data.
   - Using multiple beacons can help evade detection by spreading network traffic and making it harder for security systems to identify and block a single communication channel.
   - This tactic is consistent with the overall approach of minimizing detection, which is further supported by executing code in memory.

**Conclusion:**

Given the context of the attack and the tactics described, it is highly likely that the Shellcode scripts were executed in memory without being written to the hard disk. This approach aligns with the attackers' goal of evading detection and minimizing their footprint on the target system, especially before employing multi-beacon communication for further defense evasion.

Therefore, the answer is:

**Final Answer: A: Yes**