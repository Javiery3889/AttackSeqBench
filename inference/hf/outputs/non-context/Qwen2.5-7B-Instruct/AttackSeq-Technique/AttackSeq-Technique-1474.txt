To determine which ATT&CK technique most likely occurred before the SLUB backdoor communicated with the attackers via Slack, we need to analyze the sequence of actions and identify the most plausible precursor to the communication phase.

1. **SLUB Backdoor Communication**: The SLUB backdoor is communicating with the attackers via Slack using hardcoded authentication tokens. This involves the use of an application layer protocol (T1071) to establish and maintain the communication channel.

2. **Hardcoded Authentication Tokens**: The use of hardcoded authentication tokens suggests that the backdoor has been configured with specific credentials to access the Slack channel. This configuration likely occurred as part of the initial setup or deployment of the backdoor.

3. **Reviewing the Answer Choices**:
   - **A: T1560-Archive Collected Data**: This technique involves the collection and archiving of data, which is not directly related to the initial setup or communication phase.
   - **B: T1588.004-Digital Certificates**: This technique involves the use of digital certificates, which is not directly related to the communication setup or the use of hardcoded tokens.
   - **C: T1132.002-Non-Standard Encoding**: This technique involves the use of non-standard encoding, which is not directly related to the communication setup or the use of hardcoded tokens.
   - **D: T1071-Application Layer Protocol**: This technique involves the use of application layer protocols, which is directly related to the communication phase. However, it is more likely that the configuration of the backdoor to use these protocols would have occurred before the actual communication.

Given the context, the most plausible sequence would be the initial setup or configuration of the backdoor, which would involve the use of hardcoded authentication tokens. This setup would likely involve encoding or obfuscation to ensure the tokens are not easily detected or tampered with, which aligns with T1132.002-Non-Standard Encoding.

**Final Answer: C: T1132.002-Non-Standard Encoding**