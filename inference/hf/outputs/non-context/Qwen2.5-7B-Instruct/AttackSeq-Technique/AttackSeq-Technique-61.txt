Let's analyze the question and the answer choices step-by-step:

1. **Analyze the Question:**
   - The question mentions that Office Macro Scripts were used to load the Chinotto malware.
   - The next step in the sequence is to evade detection and load the malware without alerting defenses.

2. **Identify the Sequence of TTPs:**
   - The initial TTP is the use of Office Macro Scripts (which is not directly listed in the ATT&CK framework but is a common method for delivering malware).
   - The next TTP is to evade detection and load the malware.

3. **Compare and Evaluate Each Answer Choice:**
   - **A: T1598.002-Spearphishing Attachment**
     - This technique involves sending a malicious attachment via email, which is not directly related to evading detection after the malware has been loaded.
   - **B: T1059-Command and Scripting Interpreter**
     - This technique involves using a command or scripting interpreter to execute commands or scripts. While it can be used to execute malware, it does not directly address evading detection.
   - **C: T1620-Reflective Code Loading**
     - This technique involves loading code into memory without writing it to disk, which can help evade disk-based detection mechanisms. This aligns well with the need to evade detection after the malware has been loaded.
   - **D: T1574-Hijack Execution Flow**
     - This technique involves modifying the execution flow of a process to execute malicious code. While it can be used to evade detection, it is more about changing the execution flow rather than loading the malware directly.

4. **Step-by-Step Reasoning:**
   - The question specifies that the malware has already been loaded via Office Macro Scripts.
   - The next step is to evade detection, which means the technique should focus on how the malware is loaded into memory or how it executes without being detected.
   - Reflective Code Loading (T1620) is the most relevant technique as it directly addresses the need to load the malware into memory without writing it to disk, thereby evading disk-based detection mechanisms.

**Final Answer: C: T1620-Reflective Code Loading**