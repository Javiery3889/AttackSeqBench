To determine the most plausible sequence of TTPs, let's break down the question and analyze the provided answer choices.

### Analysis of the Question:
1. **Initial Malicious Action**: The attackers inserted malicious JavaScript code into a Korean-language news portal.
2. **Redirect**: The JavaScript code was designed to redirect victims to an exploit landing page.
3. **Exploit**: The exploit landing page leveraged CVE-2019-13720 in Google Chrome to gain an arbitrary read/write primitive.
4. **Final Action**: The exploit was used to execute a heap spraying technique to gain an arbitrary read/write primitive and then execute an embedded shellcode payload.

### Answer Choices:
A: Yes
B: No

### Step-by-Step Reasoning:
1. **Malicious JavaScript Code**: Inserting malicious JavaScript code into a news portal is a common method for initial compromise, especially in social engineering attacks.
2. **Exploit Landing Page**: Redirecting users to an exploit landing page is a typical step in a multi-stage attack to ensure the user is in the correct environment for the exploit to work.
3. **CVE-2019-13720**: This specific vulnerability in Google Chrome was used to gain an arbitrary read/write primitive. The question does not provide any information that would suggest this step is out of place or unlikely.
4. **Heap Spraying and Shellcode Execution**: These are advanced techniques used to exploit the arbitrary read/write primitive to execute malicious code. The sequence described is plausible and aligns with known attack patterns.

### Conclusion:
Given the sequence of actions described and the plausibility of each step, the most likely scenario is that the attackers followed the sequence as described.

### Final Answer: A: Yes