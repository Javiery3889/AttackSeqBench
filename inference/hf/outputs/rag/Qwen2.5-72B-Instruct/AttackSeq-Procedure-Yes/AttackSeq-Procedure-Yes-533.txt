### Step-by-Step Reasoning:

1. **Analyze the Question:**
   - The question asks whether it is likely that malicious JavaScript code was inserted into a Korean-language news portal to redirect victims to an exploit landing page, which then uses heap spraying techniques to gain an arbitrary read/write primitive and execute embedded shellcode payload, exploiting CVE-2019-13720 in Google Chrome.

2. **Analyze the Related TTPs:**
   - **Tactic: Initial Access, Technique: T1189-Drive-by Compromise:**
     - This technique involves placing malicious content in a location that the adversary believes the victim will visit. The content is designed to trigger a vulnerability in the victim's system, leading to the execution of the adversary's code.
   - **Tactic: Execution, Technique: T1059.007-JavaScript:**
     - This technique involves the use of JavaScript to execute code on the victim's system. JavaScript can be used to perform a variety of actions, including redirecting the user to a different page, executing shellcode, or exploiting vulnerabilities.

3. **Compare and Evaluate:**
   - **Initial Access (T1189-Drive-by Compromise):**
     - The insertion of malicious JavaScript code into a Korean-language news portal aligns with the drive-by compromise technique. This is a common method for initial access, where the adversary places malicious code on a website that the victim is likely to visit.
   - **Execution (T1059.007-JavaScript):**
     - Once the victim visits the compromised news portal, the malicious JavaScript code can be executed. This code can then redirect the victim to an exploit landing page, which is a common next step in a drive-by compromise.
   - **Heap Spraying and Exploitation:**
     - The exploit landing page can then use heap spraying techniques to exploit a vulnerability, such as CVE-2019-13720 in Google Chrome. Heap spraying is a technique used to increase the likelihood of successful exploitation by filling the memory with a specific pattern of data, making it easier to gain control over the execution flow.

4. **Final Answer:**
   - Given the sequence of TTPs and the context provided, it is highly likely that malicious JavaScript code was inserted into a Korean-language news portal to redirect victims to an exploit landing page, which then uses heap spraying techniques to exploit CVE-2019-13720 in Google Chrome.

**Final Answer: A: Yes**