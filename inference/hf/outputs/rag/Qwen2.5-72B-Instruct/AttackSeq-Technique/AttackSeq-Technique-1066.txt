### Step-by-Step Reasoning:

1. **Analyze the Question:**
   - The question describes a sequence of actions where an attacker compromises websites using watering hole tactics and injects them with exploits for specific vulnerabilities (CVE-2020-0674 and CVE-2019-5782).
   - The next step involves executing custom shellcode, de-obfuscating strings, initializing a network connection, and downloading a payload ('dropper.dll').

2. **Analyze the Related TTPs:**
   - **T1190-Exploit Public-Facing Application:** This technique involves exploiting a vulnerability in a public-facing application to gain initial access to a system.
   - **T1189-Drive-by Compromise:** This technique involves compromising a website to deliver malicious content to visitors, often through a watering hole attack.

3. **Compare and Evaluate:**
   - **T1190-Exploit Public-Facing Application:** This technique is relevant to the initial compromise of the website, but it does not cover the subsequent actions of executing shellcode, de-obfuscating strings, and downloading a payload.
   - **T1189-Drive-by Compromise:** This technique is more aligned with the scenario described. It involves compromising a website to deliver malicious content to visitors, which can lead to the execution of shellcode, de-obfuscation, and downloading of payloads.
   - **T1651-Cloud Administration Command:** This technique is not relevant to the described scenario, as it involves using cloud administration commands, which is not mentioned in the question.
   - **T1203-Exploitation for Client Execution:** This technique involves exploiting a client application to execute code, which is a plausible next step after a drive-by compromise. However, it is not the most comprehensive choice given the context.
   - **T1207-Rogue Domain Controller:** This technique is not relevant to the described scenario, as it involves setting up a rogue domain controller, which is not mentioned in the question.

4. **Final Answer:**
   - The most plausible sequence of TTPs, given the context of the question and the related TTPs, is **T1189-Drive-by Compromise**. This technique covers the initial compromise of the website and the subsequent actions of executing shellcode, de-obfuscating strings, and downloading the payload.

**Final Answer: B: T1189-Drive-by Compromise**