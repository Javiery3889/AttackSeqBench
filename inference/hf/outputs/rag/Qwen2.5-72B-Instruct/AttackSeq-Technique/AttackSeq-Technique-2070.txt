### Step-by-Step Reasoning

1. **Analyze the Question:**
   - The question describes an attack sequence where Whitefly gained initial access via spear-phishing emails containing a disguised dropper. The dropper then executed a loader (Trojan.Vcrodat) that executed malicious DLLs to gain elevated privileges.

2. **Analyze the Related TTPs:**
   - **Tactic: Execution, Technique: T1204.002-Malicious File:** This technique involves an adversary tricking users into executing a malicious file, which aligns with the spear-phishing email containing a disguised dropper.
   - **Tactic: Initial Access, Technique: T1566-Phishing:** This technique involves the use of phishing to gain initial access, which is consistent with the spear-phishing emails.
   - **Tactic: Initial Access, Technique: T1566.001-Spearphishing Attachment:** This specific sub-technique involves sending spear-phishing emails with attachments, which is exactly what the question describes.

3. **Compare and Evaluate the Answer Choices:**
   - **A: T1608.004-Drive-by Target:** This technique involves compromising a website to deliver a payload when a user visits the site. This does not align with the described attack sequence involving spear-phishing emails and a dropper.
   - **B: T1018-Remote System Discovery:** This technique involves an adversary discovering remote systems on a network. While this could be a subsequent step, it does not directly relate to the execution of malicious DLLs to gain elevated privileges.
   - **C: T1129-Shared Modules:** This technique involves using shared libraries or modules to execute code. This aligns with the execution of malicious DLLs to gain elevated privileges.
   - **D: T1072-Software Deployment Tools:** This technique involves using legitimate software deployment tools to execute code. This does not directly relate to the execution of malicious DLLs to gain elevated privileges.

4. **Final Answer:**
   - The most plausible sequence of TTPs based on the attack sequence described in the question is the execution of malicious DLLs to gain elevated privileges, which aligns with the technique **T1129-Shared Modules**.

**Final Answer: C: T1129-Shared Modules**