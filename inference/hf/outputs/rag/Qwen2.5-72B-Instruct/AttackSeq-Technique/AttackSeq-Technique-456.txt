### Step-by-Step Reasoning

1. **Analyze the Question:**
   - The question describes a sequence of events involving the RIG Exploit kit, which distributed CEIDPageLock by exploiting a vulnerability and tampering with the victim's browser homepage.
   - After this, a dropper started a kernel-mode driver for persistence.
   - We need to determine which ATT&CK technique occurred between these two events.

2. **Analyze the Related TTPs:**
   - **T1553.006-Code Signing Policy Modification** (Tactic: Defense Evasion): This technique involves modifying the code signing policy to allow the execution of unsigned or malicious code.
   - **T1189-Drive-by Compromise** (Tactic: Initial Access): This technique involves compromising a victim by having them visit a website that contains malicious code.
   - **T1547-Boot or Logon Autostart Execution** (Tactic: Persistence): This technique involves setting up mechanisms to ensure that malicious code runs automatically when the system boots or the user logs on.

3. **Compare and Evaluate:**
   - **T1189-Drive-by Compromise** (Answer Choices A and B): This technique is already mentioned in the question as the initial access method used by the RIG Exploit kit. It cannot be the technique that occurred after the initial compromise and before the persistence mechanism.
   - **T1071-Application Layer Protocol** (Answer Choice C): This technique involves using common application layer protocols to communicate with a remote system. It does not fit the context of the question, which is about the sequence of events leading to persistence.
   - **T1219-Remote Access Software** (Answer Choice D): This technique involves using remote access tools to maintain access to a system. While it could be relevant in a broader context, it does not fit the specific sequence described in the question, which is about the steps leading to persistence.

4. **Final Answer:**
   - The most plausible sequence of TTPs is that after the initial drive-by compromise and tampering with the browser homepage, the attacker likely modified the code signing policy to allow the execution of the dropper, which then started the kernel-mode driver for persistence.
   - Therefore, the technique that most likely occurred between the initial compromise and the persistence mechanism is **T1553.006-Code Signing Policy Modification**.

However, since this technique is not listed as an answer choice, we need to select the closest relevant technique from the given options. The closest relevant technique in the context of the sequence described is **T1189-Drive-by Compromise**, but it is already mentioned as the initial access method.

Given the options, the most plausible answer is:

**Final Answer: C: T1071-Application Layer Protocol**

This is the closest relevant technique that could fit the sequence, even though it is not the most precise match. However, if the question is strictly about the sequence described, the correct answer should be **T1553.006-Code Signing Policy Modification**, which is not listed.