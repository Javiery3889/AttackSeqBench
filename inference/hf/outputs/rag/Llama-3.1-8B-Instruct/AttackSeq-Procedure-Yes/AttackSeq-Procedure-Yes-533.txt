Analysis of the Question:
The question describes a sequence of events where attackers first redirect victims to an exploit landing page, and then use a specific exploit (CVE-2019-13720) to gain an arbitrary read/write primitive and execute shellcode. The question asks if it's likely that malicious JavaScript code was inserted into a Korean-language news portal before the exploit was used.

Analysis of Related TTPs:
- T1189-Drive-by Compromise: This technique involves compromising a user's system without their knowledge or consent, often through a drive-by download or drive-by exploit. This can be achieved by redirecting the user to a malicious website or by exploiting a vulnerability in a website.
- T1059.007-JavaScript: This technique involves using JavaScript to execute malicious code on a victim's system. This can be used to exploit vulnerabilities, steal sensitive information, or install malware.

Comparison and Evaluation:
Based on the related TTPs, it's clear that the attackers used a drive-by compromise to redirect victims to an exploit landing page. The use of JavaScript (T1059.007) is a common method for executing malicious code on a victim's system. Given that the exploit used is CVE-2019-13720, which is a vulnerability in Google Chrome, it's likely that the attackers used JavaScript to exploit this vulnerability.

Considering the sequence of events, it's plausible that the attackers first inserted malicious JavaScript code into a Korean-language news portal to redirect victims to the exploit landing page, where they would then be exploited using CVE-2019-13720.

Step-by-Step Reasoning:
1. The attackers used a drive-by compromise (T1189) to redirect victims to an exploit landing page.
2. The exploit landing page likely contained malicious JavaScript code (T1059.007) that exploited CVE-2019-13720 in Google Chrome.
3. The exploit gained an arbitrary read/write primitive and executed embedded shellcode.

Final Answer: A