To answer this question, let's break down the information provided and analyze it step by step:

1. **Analyzing the Question**: The question describes a scenario where APT-TOCS (a sophisticated threat actor) gains initial access to a system using "powershell.exe" to execute Shellcode scripts. This allows them remote control over the targeted systems. The question then asks if it's likely that PowerShell scripts were used to run a credential harvesting tool in memory, as opposed to relying on the Shellcode script functionalities being executed in memory, during the core step of the attack.

2. **Analyzing the Related TTPs**: The related TTPs (Tactics, Techniques, and Procedures) provided include:
   - **Tactic: Execution** - This refers to the tactics an adversary uses to execute malicious code on a target system.
   - **Technique: T1059.001-PowerShell** - This technique involves using PowerShell, a powerful scripting language, to execute commands and scripts on a target system. PowerShell can be used for a variety of tasks, including executing shellcode, running scripts, and interacting with the system in a way that can evade traditional security controls.

3. **Compare and Evaluate**:
   - Given that the initial access was gained using PowerShell to execute Shellcode, it indicates the attackers are comfortable using PowerShell for executing malicious code.
   - The use of PowerShell for executing Shellcode already shows a level of sophistication and an understanding of how to leverage built-in tools for malicious purposes.
   - Running a credential harvesting tool in memory using PowerShell scripts would align with the tactic of execution (using PowerShell) and would be a logical next step in an attack aimed at gaining deeper access or persistence within a network.
   - Executing scripts in memory (as opposed to writing them to disk) can help evade defenses, as it reduces the footprint of the malware and makes it harder for traditional antivirus software to detect.

4. **Step-by-Step Reasoning and Final Answer**:
   - **Step 1**: The attackers have already demonstrated the ability and willingness to use PowerShell for malicious execution.
   - **Step 2**: The use of PowerShell for executing Shellcode shows an understanding of how to leverage built-in Windows tools for attack purposes.
   - **Step 3**: Running a credential harvesting tool in memory via PowerShell aligns with known tactics (execution) and techniques (T1059.001) and would be consistent with an attempt to evade defenses.
   - **Conclusion**: Given the information and the context provided, it is plausible that PowerShell scripts were utilized to run a credential harvesting tool in memory as part of the attack's core steps, especially considering the attackers' demonstrated proficiency with PowerShell.

Final Answer: A