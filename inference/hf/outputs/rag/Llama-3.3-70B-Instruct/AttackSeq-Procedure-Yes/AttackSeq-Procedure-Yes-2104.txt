To answer this question, let's break down the steps and analyze the information provided in the question and the related TTPs (Tactics, Techniques, and Procedures).

1. **Analyzing the Question**: The question describes a scenario where attackers have established persistence using a scheduled task to execute a DLL function. This implies the attackers have already gained some level of access to the system. The question then asks if it's likely that the attackers used anti-sandboxing techniques and dynamically resolved APIs before gathering information about the victim's computer.

2. **Analyzing the Related TTPs**:
   - **Tactic: Execution, Technique: T1106-Native API**: This technique involves using native APIs to execute malicious code. Dynamically resolving APIs (a part of this technique) can help evade detection by making the malicious code more difficult to analyze statically.
   - **Tactic: Persistence, Technique: T1574.002-DLL Side-Loading**: This technique involves loading a malicious DLL into a legitimate process, which aligns with the scenario described in the question where a DLL function is executed via 'rundll32.exe'.
   - **Tactic: Discovery, Technique: T1497.003-Time Based Evasion**: This technique involves evading detection by delaying actions until a certain time or condition is met, which can be considered a form of anti-sandboxing technique as it aims to avoid triggering sandbox detection mechanisms that might flag immediate malicious activity.

3. **Comparing and Evaluating**:
   - The use of a scheduled task to execute a DLL function indicates a level of persistence and evasion (using a legitimate Windows process like 'rundll32.exe' to execute malicious code).
   - The mention of dynamically resolving APIs (part of T1106-Native API) suggests an attempt to evade detection, which aligns with the goal of anti-sandboxing techniques.
   - The fact that the loader gathered information about the victim's computer for discovery purposes suggests that the attackers were in the process of reconnaissance, which is a common step after establishing persistence and before further exploitation.

4. **Step-by-Step Reasoning and Final Answer**:
   - The attackers have already demonstrated an ability to evade detection by using a legitimate process for malicious execution.
   - The use of dynamically resolved APIs and anti-sandboxing techniques like time-based evasion would be consistent with attempts to remain undetected while gathering information about the victim's system.
   - Given the context of the related TTPs and the actions described, it is plausible that the attackers employed such techniques to evade detection before proceeding with discovery activities.

Final Answer: A