Let's analyze the question and the related TTPs step-by-step to determine the most plausible sequence of TTPs.

### Step 1: Analyze the Question
The question describes a sequence of TTPs where the MoonBounce implant is embedded in the UEFI firmware, and hooks are set in the firmware's execution phase to divert functions to malicious shellcode. The question asks which technique most likely occurred before these actions.

### Step 2: Analyze the Related TTPs
The related TTPs are:
- Tactic: Persistence, Technique: T1542-Pre-OS Boot
- Tactic: Defense Evasion, Technique: T1542-Pre-OS Boot
- Tactic: Impact, Technique: T1495-Firmware Corruption

### Step 3: Compare and Evaluate
- **T1566.003-Spearphishing via Service**: This technique involves using spearphishing to deliver malware. However, it is not directly related to the pre-OS boot or firmware corruption, which are the focus of the question.
- **T1547-Boot or Logon Autostart Execution**: This technique involves ensuring that malware is executed when the system boots or when a user logs on. While it is related to persistence, it does not directly address the pre-OS boot phase.
- **T1090.001-Internal Proxy**: This technique involves using an internal proxy to route traffic. It is not directly related to the pre-OS boot or firmware corruption.
- **T1195-Supply Chain Compromise**: This technique involves compromising a supply chain to deliver malware. It can be a method to gain initial access, which could lead to the pre-OS boot phase and firmware corruption.

### Step 4: Provide a Step-by-Step Reasoning and Final Answer
- The question focuses on the pre-OS boot phase and firmware corruption, which are directly related to T1542-Pre-OS Boot.
- T1195-Supply Chain Compromise is a plausible method to gain initial access, which could lead to the actions described in the question.
- The other techniques (T1566.003, T1547, and T1090.001) do not directly address the pre-OS boot phase or firmware corruption.

### Final Answer: D: T1195-Supply Chain Compromise